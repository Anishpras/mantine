{"pageProps":{"category":{"slug":"grids","name":"Grids","images":{"light":"/_next/static/media/grids-light.e9a2f49a.svg","dark":"/_next/static/media/grids-dark.e9cfc270.svg"}},"components":[{"component":"GridAsymmetrical","slug":"grid-asymmetrical","code":"import React from 'react';\nimport { Grid, Skeleton, Container } from '@mantine/core';\n\nconst child = <Skeleton height={140} radius=\"md\" animate={false} />;\n\nexport function GridAsymmetrical() {\n  return (\n    <Container my=\"md\">\n      <Grid>\n        <Grid.Col xs={4}>{child}</Grid.Col>\n        <Grid.Col xs={8}>{child}</Grid.Col>\n        <Grid.Col xs={8}>{child}</Grid.Col>\n        <Grid.Col xs={4}>{child}</Grid.Col>\n        <Grid.Col xs={3}>{child}</Grid.Col>\n        <Grid.Col xs={3}>{child}</Grid.Col>\n        <Grid.Col xs={6}>{child}</Grid.Col>\n      </Grid>\n    </Container>\n  );\n}\n","attributes":{"title":"Grid with asymmetrical columns","category":"grids","author":"rtivital","responsive":true,"dependencies":["/core/grid/","/core/skeleton/","/core/container/"],"canvas":{"center":false}}},{"component":"LeadGrid","slug":"lead-grid","code":"import React from 'react';\nimport { Container, Grid, SimpleGrid, Skeleton, useMantineTheme } from '@mantine/core';\n\nconst PRIMARY_COL_HEIGHT = 300;\n\nexport function LeadGrid() {\n  const theme = useMantineTheme();\n  const SECONDARY_COL_HEIGHT = PRIMARY_COL_HEIGHT / 2 - theme.spacing.md / 2;\n\n  return (\n    <Container my=\"md\">\n      <SimpleGrid cols={2} spacing=\"md\" breakpoints={[{ maxWidth: 'sm', cols: 1 }]}>\n        <Skeleton height={PRIMARY_COL_HEIGHT} radius=\"md\" animate={false} />\n        <Grid gutter=\"md\">\n          <Grid.Col>\n            <Skeleton height={SECONDARY_COL_HEIGHT} radius=\"md\" animate={false} />\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Skeleton height={SECONDARY_COL_HEIGHT} radius=\"md\" animate={false} />\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Skeleton height={SECONDARY_COL_HEIGHT} radius=\"md\" animate={false} />\n          </Grid.Col>\n        </Grid>\n      </SimpleGrid>\n    </Container>\n  );\n}\n","attributes":{"title":"Grid with leading item","category":"grids","author":"rtivital","responsive":true,"dependencies":["/core/simple-grid/","/core/grid/","/core/"],"canvas":{"center":false}}},{"component":"Subgrid","slug":"subgrid","code":"import React from 'react';\nimport { SimpleGrid, Skeleton, Container, Group, useMantineTheme } from '@mantine/core';\n\nconst getChild = (height: number) => <Skeleton height={height} radius=\"md\" animate={false} />;\nconst BASE_HEIGHT = 360;\nconst getSubHeight = (children: number, spacing: number) =>\n  BASE_HEIGHT / children - spacing * ((children - 1) / children);\n\nexport function Subgrid() {\n  const theme = useMantineTheme();\n  return (\n    <Container my=\"md\">\n      <SimpleGrid cols={4} breakpoints={[{ maxWidth: 'xs', cols: 1 }]}>\n        {getChild(BASE_HEIGHT)}\n        <Group direction=\"column\">\n          {getChild(getSubHeight(2, theme.spacing.md))}\n          {getChild(getSubHeight(2, theme.spacing.md))}\n        </Group>\n        <Group direction=\"column\">\n          {getChild(getSubHeight(3, theme.spacing.md))}\n          {getChild(getSubHeight(3, theme.spacing.md))}\n          {getChild(getSubHeight(3, theme.spacing.md))}\n        </Group>\n        {getChild(BASE_HEIGHT)}\n      </SimpleGrid>\n    </Container>\n  );\n}\n","attributes":{"title":"Grid with vertical items","category":"grids","author":"rtivital","responsive":true,"dependencies":["/core/simple-grid/","/core/skeleton/","/core/container/"],"canvas":{"center":false}}}]},"__N_SSG":true}