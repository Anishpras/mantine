{"pageProps":{"data":{"component":"TableSort","slug":"table-sort","code":"import React, { useState } from 'react';\nimport {\n  createStyles,\n  Table,\n  ScrollArea,\n  UnstyledButton,\n  Group,\n  Text,\n  Center,\n  TextInput,\n} from '@mantine/core';\nimport {\n  CaretUpIcon,\n  CaretDownIcon,\n  CaretSortIcon,\n  MagnifyingGlassIcon,\n} from '@modulz/radix-icons';\n\nconst useStyles = createStyles((theme) => ({\n  th: {\n    padding: '0 !important',\n  },\n\n  control: {\n    width: '100%',\n    padding: `${theme.spacing.xs}px ${theme.spacing.md}px`,\n\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n    },\n  },\n\n  icon: {\n    width: 21,\n    height: 21,\n    borderRadius: 21,\n  },\n\n  sorted: {\n    backgroundColor:\n      theme.colorScheme === 'dark'\n        ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.35)\n        : theme.colors[theme.primaryColor][0],\n    color: theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 4 : 6],\n  },\n}));\n\ninterface RowData {\n  name: string;\n  email: string;\n  company: string;\n}\n\ninterface TableSortProps {\n  data: RowData[];\n}\n\ninterface ThProps {\n  children: React.ReactNode;\n  reversed: boolean;\n  sorted: boolean;\n  onSort(): void;\n}\n\nfunction Th({ children, reversed, sorted, onSort }: ThProps) {\n  const { classes, cx } = useStyles();\n  const Icon = sorted ? (reversed ? CaretUpIcon : CaretDownIcon) : CaretSortIcon;\n  return (\n    <th className={classes.th}>\n      <UnstyledButton onClick={onSort} className={classes.control}>\n        <Group position=\"apart\">\n          <Text weight={500} size=\"sm\">\n            {children}\n          </Text>\n          <Center className={cx(classes.icon, { [classes.sorted]: sorted })}>\n            <Icon />\n          </Center>\n        </Group>\n      </UnstyledButton>\n    </th>\n  );\n}\n\nfunction filterData(data: RowData[], search: string) {\n  const keys = Object.keys(data[0]);\n  const query = search.toLowerCase().trim();\n  return data.filter((item) => keys.some((key) => item[key].toLowerCase().includes(query)));\n}\n\nfunction sortData(\n  data: RowData[],\n  payload: { sortBy: keyof RowData; reversed: boolean; search: string }\n) {\n  if (!payload.sortBy) {\n    return filterData(data, payload.search);\n  }\n\n  return filterData(\n    [...data].sort((a, b) => {\n      if (payload.reversed) {\n        return b[payload.sortBy].localeCompare(a[payload.sortBy]);\n      }\n\n      return a[payload.sortBy].localeCompare(b[payload.sortBy]);\n    }),\n    payload.search\n  );\n}\n\nexport function TableSort({ data }: TableSortProps) {\n  const [search, setSearch] = useState('');\n  const [sortedData, setSortedData] = useState(data);\n  const [sortBy, setSortBy] = useState<keyof RowData>(null);\n  const [reverseSortDirection, setReverseSortDirection] = useState(false);\n\n  const setSorting = (field: keyof RowData) => {\n    const reversed = field === sortBy ? !reverseSortDirection : false;\n    setReverseSortDirection(reversed);\n    setSortBy(field);\n    setSortedData(sortData(data, { sortBy: field, reversed, search }));\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value;\n    setSearch(value);\n    setSortedData(sortData(data, { sortBy, reversed: reverseSortDirection, search: value }));\n  };\n\n  const rows = sortedData.map((row) => (\n    <tr key={row.name}>\n      <td>{row.name}</td>\n      <td>{row.email}</td>\n      <td>{row.company}</td>\n    </tr>\n  ));\n\n  return (\n    <ScrollArea>\n      <TextInput\n        placeholder=\"Search by any field\"\n        mb=\"md\"\n        icon={<MagnifyingGlassIcon />}\n        value={search}\n        onChange={handleSearchChange}\n      />\n      <Table\n        horizontalSpacing=\"md\"\n        verticalSpacing=\"xs\"\n        sx={{ tableLayout: 'fixed', minWidth: 700 }}\n      >\n        <thead>\n          <tr>\n            <Th\n              sorted={sortBy === 'name'}\n              reversed={reverseSortDirection}\n              onSort={() => setSorting('name')}\n            >\n              Name\n            </Th>\n            <Th\n              sorted={sortBy === 'email'}\n              reversed={reverseSortDirection}\n              onSort={() => setSorting('email')}\n            >\n              Email\n            </Th>\n            <Th\n              sorted={sortBy === 'company'}\n              reversed={reverseSortDirection}\n              onSort={() => setSorting('company')}\n            >\n              Company\n            </Th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows.length > 0 ? (\n            rows\n          ) : (\n            <tr>\n              <td colSpan={Object.keys(data[0]).length}>\n                <Text weight={500} align=\"center\">\n                  Nothing found\n                </Text>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </ScrollArea>\n  );\n}\n","attributes":{"title":"Table with search and sort","category":"tables","author":"rtivital","dependencies":["/core/table/","/core/scroll-area/","/core/button/#unstyled-button","/core/group/","/core/text/","/core/center/","/core/text-input/","@modulz/radix-icons"],"props":{"data":[{"name":"Athena Weissnat","company":"Little - Rippin","email":"Elouise.Prohaska@yahoo.com"},{"name":"Deangelo Runolfsson","company":"Greenfelder - Krajcik","email":"Kadin_Trantow87@yahoo.com"},{"name":"Danny Carter","company":"Kohler and Sons","email":"Marina3@hotmail.com"},{"name":"Trace Tremblay PhD","company":"Crona, Aufderhar and Senger","email":"Antonina.Pouros@yahoo.com"},{"name":"Derek Dibbert","company":"Gottlieb LLC","email":"Abagail29@hotmail.com"},{"name":"Viola Bernhard","company":"Funk, Rohan and Kreiger","email":"Jamie23@hotmail.com"},{"name":"Austin Jacobi","company":"Botsford - Corwin","email":"Genesis42@yahoo.com"},{"name":"Hershel Mosciski","company":"Okuneva, Farrell and Kilback","email":"Idella.Stehr28@yahoo.com"},{"name":"Mylene Ebert","company":"Kirlin and Sons","email":"Hildegard17@hotmail.com"},{"name":"Lou Trantow","company":"Parisian - Lemke","email":"Hillard.Barrows1@hotmail.com"},{"name":"Dariana Weimann","company":"Schowalter - Donnelly","email":"Colleen80@gmail.com"},{"name":"Dr. Christy Herman","company":"VonRueden - Labadie","email":"Lilyan98@gmail.com"},{"name":"Katelin Schuster","company":"Jacobson - Smitham","email":"Erich_Brekke76@gmail.com"},{"name":"Melyna Macejkovic","company":"Schuster LLC","email":"Kylee4@yahoo.com"},{"name":"Pinkie Rice","company":"Wolf, Trantow and Zulauf","email":"Fiona.Kutch@hotmail.com"},{"name":"Brain Kreiger","company":"Lueilwitz Group","email":"Rico98@hotmail.com"}]},"canvas":{"center":true,"maxWidth":920}}}},"__N_SSG":true}