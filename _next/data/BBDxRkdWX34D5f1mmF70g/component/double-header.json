{"pageProps":{"data":{"component":"DoubleHeader","slug":"double-header","code":"import React, { useState } from 'react';\nimport { createStyles, Header, Container, Anchor, Group, Burger } from '@mantine/core';\nimport { useBooleanToggle } from '@mantine/hooks';\nimport { MantineLogo } from '../../shared/MantineLogo';\n\nconst HEADER_HEIGHT = 84;\n\nconst useStyles = createStyles((theme) => ({\n  inner: {\n    height: HEADER_HEIGHT,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n\n  burger: {\n    [theme.fn.largerThan('sm')]: {\n      display: 'none',\n    },\n  },\n\n  links: {\n    paddingTop: theme.spacing.lg,\n    height: HEADER_HEIGHT,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n\n    [theme.fn.smallerThan('sm')]: {\n      display: 'none',\n    },\n  },\n\n  mainLinks: {\n    marginRight: -theme.spacing.sm,\n  },\n\n  mainLink: {\n    textTransform: 'uppercase',\n    fontSize: 13,\n    color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[6],\n    padding: `7px ${theme.spacing.sm}px`,\n    fontWeight: 700,\n    borderBottom: '2px solid transparent',\n    transition: 'border-color 100ms ease, color 100ms ease',\n\n    '&:hover': {\n      color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n      textDecoration: 'none',\n    },\n  },\n\n  secondaryLink: {\n    color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n    fontSize: theme.fontSizes.xs,\n    textTransform: 'uppercase',\n    transition: 'color 100ms ease',\n\n    '&:hover': {\n      color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n      textDecoration: 'none',\n    },\n  },\n\n  mainLinkActive: {\n    color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n    borderBottomColor: theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 5 : 6],\n  },\n}));\n\ninterface LinkProps {\n  label: string;\n  link: string;\n}\n\ninterface DoubleHeaderProps {\n  mainLinks: LinkProps[];\n  userLinks: LinkProps[];\n}\n\nexport function DoubleHeader({ mainLinks, userLinks }: DoubleHeaderProps) {\n  const [opened, toggleOpened] = useBooleanToggle(false);\n  const { classes, cx } = useStyles();\n  const [active, setActive] = useState(0);\n\n  const mainItems = mainLinks.map((item, index) => (\n    <Anchor<'a'>\n      href={item.link}\n      key={item.label}\n      className={cx(classes.mainLink, { [classes.mainLinkActive]: index === active })}\n      onClick={(event) => {\n        event.preventDefault();\n        setActive(index);\n      }}\n    >\n      {item.label}\n    </Anchor>\n  ));\n\n  const secondaryItems = userLinks.map((item) => (\n    <Anchor<'a'>\n      href={item.link}\n      key={item.label}\n      onClick={(event) => event.preventDefault()}\n      className={classes.secondaryLink}\n    >\n      {item.label}\n    </Anchor>\n  ));\n\n  return (\n    <Header height={HEADER_HEIGHT} mb={120}>\n      <Container className={classes.inner}>\n        <MantineLogo width={130} />\n        <div className={classes.links}>\n          <Group position=\"right\">{secondaryItems}</Group>\n          <Group spacing={0} position=\"right\" className={classes.mainLinks}>\n            {mainItems}\n          </Group>\n        </div>\n        <Burger\n          opened={opened}\n          onClick={() => toggleOpened()}\n          className={classes.burger}\n          size=\"sm\"\n        />\n      </Container>\n    </Header>\n  );\n}\n","attributes":{"title":"Header with multiple layers","category":"headers","author":"rtivital","withColor":true,"responsive":true,"dependencies":["/core/app-shell/","/core/button/#unstyled-button"],"props":{"userLinks":[{"link":"#","label":"Privacy & Security"},{"link":"#","label":"Account settings"},{"link":"#","label":"Support options"}],"mainLinks":[{"link":"#","label":"Book a demo"},{"link":"#","label":"Documentation"},{"link":"#","label":"Community"},{"link":"#","label":"Academy"},{"link":"#","label":"Forums"}]},"canvas":{"center":false}}}},"__N_SSG":true}