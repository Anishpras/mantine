{
    "componentChunkName": "component---src-components-gallery-gallery-component-page-tsx",
    "path": "/component/table-of-contents-floating",
    "result": {"pageContext":{"_component":"TableOfContentsFloating","code":"import React, { useState } from 'react';\nimport { createStyles, Box, Text, Group } from '@mantine/core';\nimport { ActivityLogIcon } from '@modulz/radix-icons';\n\nconst LINK_HEIGHT = 38;\nconst INDICATOR_SIZE = 10;\nconst INDICATOR_OFFSET = (LINK_HEIGHT - INDICATOR_SIZE) / 2;\n\nconst useStyles = createStyles((theme) => ({\n  link: {\n    ...theme.fn.focusStyles(),\n    display: 'block',\n    textDecoration: 'none',\n    color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.black,\n    lineHeight: `${LINK_HEIGHT}px`,\n    fontSize: theme.fontSizes.sm,\n    height: LINK_HEIGHT,\n    borderTopRightRadius: theme.radius.sm,\n    borderBottomRightRadius: theme.radius.sm,\n    borderLeft: `2px solid ${\n      theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[2]\n    }`,\n\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n    },\n  },\n\n  linkActive: {\n    fontWeight: 500,\n    color: theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 3 : 7],\n  },\n\n  links: {\n    position: 'relative',\n  },\n\n  indicator: {\n    transition: 'transform 150ms ease',\n    border: `2px solid ${theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 3 : 7]}`,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n    height: INDICATOR_SIZE,\n    width: INDICATOR_SIZE,\n    borderRadius: INDICATOR_SIZE,\n    position: 'absolute',\n    left: -INDICATOR_SIZE / 2 + 1,\n  },\n}));\n\ninterface TableOfContentsFloatingProps {\n  links: { label: string; link: string; order: number }[];\n}\n\nexport function TableOfContentsFloating({ links }: TableOfContentsFloatingProps) {\n  const { classes, cx } = useStyles();\n  const [active, setActive] = useState(2);\n\n  const items = links.map((item, index) => (\n    <Box<'a'>\n      component=\"a\"\n      href={item.link}\n      onClick={(event) => {\n        event.preventDefault();\n        setActive(index);\n      }}\n      key={item.label}\n      className={cx(classes.link, { [classes.linkActive]: active === index })}\n      sx={(theme) => ({ paddingLeft: item.order * theme.spacing.lg })}\n    >\n      {item.label}\n    </Box>\n  ));\n\n  return (\n    <div>\n      <Group mb=\"md\">\n        <ActivityLogIcon />\n        <Text>Table of contents</Text>\n      </Group>\n      <div className={classes.links}>\n        <div\n          className={classes.indicator}\n          style={{ transform: `translateY(${active * LINK_HEIGHT + INDICATOR_OFFSET}px)` }}\n        />\n        {items}\n      </div>\n    </div>\n  );\n}\n","category":{"name":"Table of contents","path":"/category/toc/"},"url":"/component/table-of-contents-floating","attributes":{"title":"Table of contents indicator","category":"toc","author":"rtivital","withColor":true,"dependencies":["/core/box/","/core/text/","/core/text/","@modulz/radix-icons"],"props":{"links":[{"label":"Usage","link":"#usage","order":1},{"label":"Position and placement","link":"#position","order":1},{"label":"With other overlays","link":"#overlays","order":1},{"label":"Manage focus","link":"#focus","order":1},{"label":"Examples","link":"#1","order":1},{"label":"Show on focus","link":"#2","order":2},{"label":"Show on hover","link":"#3","order":2},{"label":"With form","link":"#4","order":2}]},"canvas":{"center":true,"maxWidth":280}}}},
    "staticQueryHashes": []}