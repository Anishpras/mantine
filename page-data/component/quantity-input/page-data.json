{
    "componentChunkName": "component---src-components-gallery-gallery-component-page-tsx",
    "path": "/component/quantity-input",
    "result": {"pageContext":{"_component":"QuantityInput","code":"import React, { useRef, useState } from 'react';\nimport { createStyles, NumberInput, NumberInputHandlers, ActionIcon } from '@mantine/core';\nimport { Plus, Minus } from 'tabler-icons-react';\n\nconst useStyles = createStyles((theme) => ({\n  wrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: `6px ${theme.spacing.xs}px`,\n    borderRadius: theme.radius.sm,\n    border: `1px solid ${theme.colorScheme === 'dark' ? 'transparent' : theme.colors.gray[3]}`,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.white,\n\n    '&:focus-within': {\n      borderColor: theme.colors[theme.primaryColor][6],\n    },\n  },\n\n  control: {\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n    border: `1px solid ${theme.colorScheme === 'dark' ? 'transparent' : theme.colors.gray[3]}`,\n\n    '&:disabled': {\n      borderColor: theme.colorScheme === 'dark' ? 'transparent' : theme.colors.gray[3],\n      opacity: 0.8,\n      backgroundColor: 'transparent',\n    },\n  },\n\n  input: {\n    textAlign: 'center',\n    paddingRight: `${theme.spacing.sm}px !important`,\n    paddingLeft: `${theme.spacing.sm}px !important`,\n    height: 28,\n    flex: 1,\n  },\n}));\n\ninterface QuantityInputProps {\n  min?: number;\n  max?: number;\n}\n\nexport function QuantityInput({ min = 1, max = 10 }: QuantityInputProps) {\n  const { classes } = useStyles();\n  const handlers = useRef<NumberInputHandlers>();\n  const [value, setValue] = useState(1);\n\n  return (\n    <div className={classes.wrapper}>\n      <ActionIcon<'button'>\n        size={28}\n        variant=\"transparent\"\n        onClick={() => handlers.current.decrement()}\n        disabled={value === min}\n        className={classes.control}\n        onMouseDown={(event) => event.preventDefault()}\n      >\n        <Minus size={16} />\n      </ActionIcon>\n\n      <NumberInput\n        variant=\"unstyled\"\n        min={min}\n        max={max}\n        handlersRef={handlers}\n        value={value}\n        onChange={setValue}\n        classNames={{ input: classes.input }}\n      />\n\n      <ActionIcon<'button'>\n        size={28}\n        variant=\"transparent\"\n        onClick={() => handlers.current.increment()}\n        disabled={value === max}\n        className={classes.control}\n        onMouseDown={(event) => event.preventDefault()}\n      >\n        <Plus size={16} />\n      </ActionIcon>\n    </div>\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/quantity-input","attributes":{"title":"Number input with custom controls","category":"inputs","author":"rtivital","dependencies":[],"canvas":{"center":true,"maxWidth":140}}}},
    "staticQueryHashes": []}