{
    "componentChunkName": "component---src-components-gallery-gallery-category-page-tsx",
    "path": "/category/inputs/",
    "result": {"pageContext":{"category":{"slug":"inputs","name":"Inputs"},"components":[{"_component":"AutocompleteLoading","code":"import React, { useState, useRef } from 'react';\nimport { Autocomplete, Loader } from '@mantine/core';\n\nexport function AutocompleteLoading() {\n  const timeoutRef = useRef<number>(-1);\n  const [value, setValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState<string[]>([]);\n\n  const handleChange = (val: string) => {\n    window.clearTimeout(timeoutRef.current);\n    setValue(val);\n    setData([]);\n\n    if (val.trim().length === 0 || val.includes('@')) {\n      setLoading(false);\n    } else {\n      setLoading(true);\n      timeoutRef.current = window.setTimeout(() => {\n        setLoading(false);\n        setData(['gmail.com', 'outlook.com', 'yahoo.com'].map((provider) => `${val}@${provider}`));\n      }, 1000);\n    }\n  };\n  return (\n    <Autocomplete\n      value={value}\n      data={data}\n      onChange={handleChange}\n      rightSection={loading ? <Loader size={16} /> : null}\n      label=\"Async Autocomplete data\"\n      placeholder=\"Your email\"\n    />\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/autocomplete-loading","attributes":{"title":"Autocomplete async data","category":"inputs","author":"rtivital","dependencies":["/core/autocomplete/","/core/loader/"],"canvas":{"center":true,"maxWidth":420}}},{"_component":"CheckboxCard","code":"import React from 'react';\nimport { UnstyledButton, Checkbox, Text, createStyles } from '@mantine/core';\nimport { useUncontrolled } from '@mantine/hooks';\n\nconst useStyles = createStyles((theme) => ({\n  button: {\n    display: 'flex',\n    width: '100%',\n    border: `1px solid ${\n      theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.colors.gray[3]\n    }`,\n    borderRadius: theme.radius.sm,\n    padding: theme.spacing.lg,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.white,\n\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[9] : theme.colors.gray[0],\n    },\n  },\n}));\n\ninterface CheckboxCardProps {\n  checked?: boolean;\n  defaultChecked?: boolean;\n  onChange?(checked: boolean): void;\n  title: React.ReactNode;\n  description: React.ReactNode;\n}\n\nexport function CheckboxCard({\n  checked,\n  defaultChecked,\n  onChange,\n  title,\n  description,\n  className,\n  ...others\n}: CheckboxCardProps & Omit<React.ComponentPropsWithoutRef<'button'>, keyof CheckboxCardProps>) {\n  const { classes, cx } = useStyles();\n\n  const [value, handleChange] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange,\n    rule: (val) => typeof val === 'boolean',\n  });\n\n  return (\n    <UnstyledButton\n      {...others}\n      onClick={() => handleChange(!value)}\n      className={cx(classes.button, className)}\n    >\n      <Checkbox\n        checked={value}\n        onChange={() => {}}\n        tabIndex={-1}\n        size=\"md\"\n        mr=\"xl\"\n        styles={{ input: { cursor: 'pointer' } }}\n      />\n\n      <div>\n        <Text weight={500} mb={7} sx={{ lineHeight: 1 }}>\n          {title}\n        </Text>\n        <Text size=\"sm\" color=\"dimmed\">\n          {description}\n        </Text>\n      </div>\n    </UnstyledButton>\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/checkbox-card","attributes":{"title":"Card with checkbox","category":"inputs","author":"rtivital","withColor":true,"dependencies":["/core/card/","/core/checkbox/","/core/text/","/core/button/#unstyled-button","/hooks/use-uncontrolled/"],"props":{"title":"@mantine/core","description":"Core components library: inputs, buttons, overlays, etc."},"canvas":{"center":true,"maxWidth":400}}},{"_component":"ContainedInputs","code":"import React from 'react';\nimport { createStyles, Select, TextInput } from '@mantine/core';\nimport { DatePicker } from '@mantine/dates';\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    position: 'relative',\n  },\n\n  input: {\n    height: 'auto',\n    paddingTop: 18,\n  },\n\n  label: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    fontSize: theme.fontSizes.xs,\n    paddingLeft: theme.spacing.sm,\n    paddingTop: theme.spacing.sm / 2,\n    zIndex: 1,\n  },\n}));\n\nexport function ContainedInputs() {\n  // You can add these classes as classNames to any Mantine input, it will work the same\n  const { classes } = useStyles();\n\n  return (\n    <div>\n      <TextInput label=\"Shipping address\" placeholder=\"15329 Huston 21st\" classNames={classes} />\n\n      <Select\n        style={{ marginTop: 20, zIndex: 2 }}\n        data={['React', 'Angular', 'Svelte', 'Vue']}\n        placeholder=\"Pick one\"\n        label=\"Your favorite library/framework\"\n        classNames={classes}\n      />\n\n      <DatePicker\n        style={{ marginTop: 20 }}\n        label=\"Departure date\"\n        placeholder=\"When will you leave?\"\n        classNames={classes}\n        clearable={false}\n      />\n    </div>\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/contained-inputs","attributes":{"title":"Inputs with label inside input","category":"inputs","author":"rtivital","dependencies":["/core/select/","/core/text-input/","/dates/date-picker/"],"canvas":{"center":true,"maxWidth":420}}},{"_component":"CountriesSelect","code":"import React, { forwardRef } from 'react';\nimport Flag from 'react-flagpack';\nimport {\n  useMantineTheme,\n  CloseButton,\n  MultiSelect,\n  MultiSelectValueProps,\n  SelectItemProps,\n} from '@mantine/core';\nimport { countriesData } from '@mantine/mockdata';\n\nfunction Value({\n  value,\n  label,\n  onRemove,\n  classNames,\n  ...others\n}: MultiSelectValueProps & { value: string }) {\n  const theme = useMantineTheme();\n\n  return (\n    <div {...others}>\n      <div\n        style={{\n          display: 'flex',\n          cursor: 'default',\n          alignItems: 'center',\n          backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n          border: `1px solid ${\n            theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.colors.gray[4]\n          }`,\n          paddingLeft: 10,\n          borderRadius: 4,\n        }}\n      >\n        <div style={{ marginRight: 10 }}>\n          <Flag code={value} size=\"S\" />\n        </div>\n        <div style={{ lineHeight: 1, fontSize: 12 }}>{label}</div>\n        <CloseButton onClick={onRemove} variant=\"transparent\" size={22} iconSize={14} />\n      </div>\n    </div>\n  );\n}\n\nconst Item = forwardRef<HTMLDivElement, SelectItemProps>(\n  ({ label, value, ...others }: SelectItemProps, ref) => (\n    <div ref={ref} {...others}>\n      <div style={{ display: 'flex' }}>\n        <div style={{ marginRight: 10 }}>\n          <Flag code={value} size=\"S\" />\n        </div>\n        <div>{label}</div>\n      </div>\n    </div>\n  )\n);\n\nexport function CountriesSelect() {\n  return (\n    <MultiSelect\n      data={countriesData}\n      limit={20}\n      valueComponent={Value}\n      itemComponent={Item}\n      searchable\n      defaultValue={['US', 'DE']}\n      placeholder=\"Pick countries\"\n      label=\"Which countries did you visit last year?\"\n    />\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/countries-select","attributes":{"title":"Multiple countries select","category":"inputs","author":"rtivital","dependencies":["/core/multi-select/","/core/action-icon/#close-button","react-flagpack"],"canvas":{"center":true,"maxWidth":360}}},{"_component":"CountryPicker","code":"import React, { forwardRef, useState } from 'react';\nimport { Select, SelectItemProps } from '@mantine/core';\nimport Flag from 'react-flagpack';\n\nconst data = [\n  { label: 'Russia', value: 'RU' },\n  { label: 'United States', value: 'US' },\n  { label: 'Australia', value: 'AU' },\n  { label: 'Belgium', value: 'BE' },\n  { label: 'Poland', value: 'PL' },\n  { label: 'India', value: 'IN' },\n];\n\nconst SelectItem = forwardRef<HTMLDivElement, SelectItemProps>(\n  ({ label, value, ...others }: SelectItemProps, ref) => (\n    <div ref={ref} {...others}>\n      <div style={{ display: 'flex' }}>\n        <div style={{ marginRight: 15 }}>\n          <Flag code={value} size=\"S\" />\n        </div>\n        <div>{label}</div>\n      </div>\n    </div>\n  )\n);\n\nexport function CountryPicker() {\n  const [value, setValue] = useState('AU');\n  return (\n    <Select\n      size=\"md\"\n      data={data}\n      icon={<Flag code={value} size=\"S\" />}\n      transitionDuration={150}\n      transition={{\n        in: { opacity: 1, transform: 'translateY(0px) scale(1)' },\n        out: { opacity: 0, transform: 'translateY(-10px) scale(1.01)' },\n        transitionProperty: 'transform',\n      }}\n      itemComponent={SelectItem}\n      maxDropdownHeight={400}\n      value={value}\n      onChange={setValue}\n    />\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/country-picker","attributes":{"title":"Country picker","category":"inputs","author":"rtivital","dependencies":["/core/select/","react-flagpack"],"canvas":{"center":true,"maxWidth":260}}},{"_component":"CurrencyInput","code":"import React from 'react';\nimport { NativeSelect, TextInput } from '@mantine/core';\n\nconst data = [\n  { value: 'eur', label: 'ðŸ‡ªðŸ‡º EUR' },\n  { value: 'usd', label: 'ðŸ‡ºðŸ‡¸ USD' },\n  { value: 'cad', label: 'ðŸ‡¨ðŸ‡¦ CAD' },\n  { value: 'gbp', label: 'ðŸ‡¬ðŸ‡§ GBP' },\n  { value: 'aud', label: 'ðŸ‡¦ðŸ‡º AUD' },\n];\n\nexport function CurrencyInput() {\n  const select = (\n    <NativeSelect\n      data={data}\n      styles={{\n        input: {\n          fontWeight: 500,\n          borderTopLeftRadius: 0,\n          borderBottomLeftRadius: 0,\n        },\n      }}\n    />\n  );\n\n  return (\n    <TextInput\n      type=\"number\"\n      placeholder=\"1000\"\n      label=\"Transfer amount\"\n      rightSection={select}\n      rightSectionWidth={92}\n    />\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/currency-input","attributes":{"title":"Number input with currency select","category":"inputs","author":"rtivital","dependencies":["/core/text-input/","/core/native-select/"],"canvas":{"center":true,"maxWidth":420}}},{"_component":"FloatingLabelInput","code":"import React, { useState } from 'react';\nimport { TextInput, createStyles } from '@mantine/core';\n\nconst useStyles = createStyles((theme, { floating }: { floating: boolean }) => ({\n  root: {\n    position: 'relative',\n  },\n\n  label: {\n    position: 'absolute',\n    zIndex: 2,\n    top: 7,\n    left: theme.spacing.sm,\n    pointerEvents: 'none',\n    color: floating\n      ? theme.colorScheme === 'dark'\n        ? theme.white\n        : theme.black\n      : theme.colorScheme === 'dark'\n      ? theme.colors.dark[3]\n      : theme.colors.gray[5],\n    transition: 'transform 150ms ease, color 150ms ease, font-size 150ms ease',\n    transform: floating ? `translate(-${theme.spacing.sm}px, -28px)` : 'none',\n    fontSize: floating ? theme.fontSizes.xs : theme.fontSizes.sm,\n    fontWeight: floating ? 500 : 400,\n  },\n\n  required: {\n    transition: 'opacity 150ms ease',\n    opacity: floating ? 1 : 0,\n  },\n\n  input: {\n    '&::placeholder': {\n      transition: 'color 150ms ease',\n      color: !floating ? 'transparent' : undefined,\n    },\n  },\n}));\n\nexport function FloatingLabelInput() {\n  const [focused, setFocused] = useState(false);\n  const [value, setValue] = useState('');\n  const { classes } = useStyles({ floating: value.trim().length !== 0 || focused });\n\n  return (\n    <TextInput\n      label=\"Floating label\"\n      placeholder=\"OMG, it also has a placeholder\"\n      required\n      classNames={classes}\n      value={value}\n      onChange={(event) => setValue(event.currentTarget.value)}\n      onFocus={() => setFocused(true)}\n      onBlur={() => setFocused(false)}\n      mt=\"md\"\n      autoComplete=\"off\"\n    />\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/floating-label-input","attributes":{"title":"Input with floating label","category":"inputs","author":"rtivital","dependencies":["/core/text-input/","/core/select/"],"canvas":{"center":true,"maxWidth":420}}},{"_component":"ForgotPasswordInput","code":"import React from 'react';\nimport { PasswordInput, Text, Group, PasswordInputProps, Anchor } from '@mantine/core';\n\nexport function ForgotPasswordInput({ className, style, ...others }: PasswordInputProps) {\n  return (\n    <div className={className} style={style}>\n      <Group position=\"apart\" mb={5}>\n        <Text component=\"label\" htmlFor=\"your-password\" size=\"sm\" weight={500}>\n          Your password\n        </Text>\n\n        <Anchor<'a'>\n          href=\"#\"\n          onClick={(event) => event.preventDefault()}\n          sx={(theme) => ({\n            paddingTop: 2,\n            color: theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 4 : 6],\n            fontWeight: 500,\n            fontSize: theme.fontSizes.xs,\n          })}\n        >\n          Forgot your password?\n        </Anchor>\n      </Group>\n      <PasswordInput placeholder=\"Your password\" id=\"your-password\" {...others} />\n    </div>\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/forgot-password-input","attributes":{"title":"Forgot password on input label","category":"inputs","author":"rtivital","withColor":true,"dependencies":["/core/password-input/","/core/text/","/core/button/#unstyled-button"],"canvas":{"center":true,"maxWidth":420}}},{"_component":"ImageCheckboxes","code":"import React from 'react';\nimport { UnstyledButton, Checkbox, Text, Image, SimpleGrid, createStyles } from '@mantine/core';\nimport { useUncontrolled } from '@mantine/hooks';\nimport icons from './icons';\n\nconst useStyles = createStyles((theme, { checked }: { checked: boolean }) => ({\n  button: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    transition: 'background-color 150ms ease, border-color 150ms ease',\n    border: `1px solid ${\n      checked\n        ? theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 9 : 6]\n        : theme.colorScheme === 'dark'\n        ? theme.colors.dark[8]\n        : theme.colors.gray[3]\n    }`,\n    borderRadius: theme.radius.sm,\n    padding: theme.spacing.sm,\n    backgroundColor: checked\n      ? theme.colorScheme === 'dark'\n        ? theme.fn.rgba(theme.colors[theme.primaryColor][8], 0.3)\n        : theme.colors[theme.primaryColor][0]\n      : theme.colorScheme === 'dark'\n      ? theme.colors.dark[8]\n      : theme.white,\n  },\n\n  body: {\n    flex: 1,\n    marginLeft: theme.spacing.md,\n  },\n}));\n\ninterface ImageCheckboxProps {\n  checked?: boolean;\n  defaultChecked?: boolean;\n  onChange?(checked: boolean): void;\n  title: string;\n  description: string;\n  image: string;\n}\n\nexport function ImageCheckbox({\n  checked,\n  defaultChecked,\n  onChange,\n  title,\n  description,\n  className,\n  image,\n  ...others\n}: ImageCheckboxProps & Omit<React.ComponentPropsWithoutRef<'button'>, keyof ImageCheckboxProps>) {\n  const [value, handleChange] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange,\n    rule: (val) => typeof val === 'boolean',\n  });\n\n  const { classes, cx } = useStyles({ checked: value });\n\n  return (\n    <UnstyledButton\n      {...others}\n      onClick={() => handleChange(!value)}\n      className={cx(classes.button, className)}\n    >\n      <Image src={image} alt={title} width={40} />\n\n      <div className={classes.body}>\n        <Text color=\"dimmed\" size=\"xs\" sx={{ lineHeight: 1 }} mb={5}>\n          {description}\n        </Text>\n        <Text weight={500} size=\"sm\" sx={{ lineHeight: 1 }}>\n          {title}\n        </Text>\n      </div>\n\n      <Checkbox\n        checked={value}\n        onChange={() => {}}\n        tabIndex={-1}\n        styles={{ input: { cursor: 'pointer' } }}\n      />\n    </UnstyledButton>\n  );\n}\n\nconst mockdata = [\n  { description: 'Sun and sea', title: 'Beach vacation', image: icons.sea },\n  { description: 'Sightseeing', title: 'City trips', image: icons.city },\n  { description: 'Mountains', title: 'Hiking vacation', image: icons.mountain },\n  { description: 'Snow and ice', title: 'Winter vacation', image: icons.winter },\n];\n\nexport function ImageCheckboxes() {\n  const items = mockdata.map((item) => <ImageCheckbox {...item} key={item.title} />);\n  return (\n    <SimpleGrid\n      cols={4}\n      breakpoints={[\n        { maxWidth: 'md', cols: 2 },\n        { maxWidth: 'sm', cols: 1 },\n      ]}\n    >\n      {items}\n    </SimpleGrid>\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/image-checkboxes","attributes":{"title":"Checkbox with image","category":"inputs","author":"rtivital","withColor":true,"dependencies":["/core/checkbox/","/core/paper/","/core/text/","/core/image/","/core/simple-grid/","/core/button/#unstyled-button","https://icons8.com/"],"canvas":{"center":true,"maxWidth":1080}}},{"_component":"InputTooltip","code":"import React, { useState } from 'react';\nimport { TextInput, PasswordInput, Tooltip, Center, Text } from '@mantine/core';\nimport { InfoCircle } from 'tabler-icons-react';\n\nfunction TooltipIcon() {\n  const rightSection = (\n    <Tooltip\n      label=\"We store your data securely\"\n      placement=\"end\"\n      withArrow\n      transition=\"pop-bottom-right\"\n    >\n      <Text color=\"dimmed\" sx={{ cursor: 'help' }}>\n        <Center>\n          <InfoCircle size={18} />\n        </Center>\n      </Text>\n    </Tooltip>\n  );\n\n  return (\n    <TextInput\n      rightSection={rightSection}\n      label=\"Tooltip shown on icon hover\"\n      placeholder=\"Your email\"\n    />\n  );\n}\n\nfunction TooltipFocus() {\n  const [opened, setOpened] = useState(false);\n  const [value, setValue] = useState('');\n  const valid = value.trim().length >= 6;\n  return (\n    <Tooltip\n      label={valid ? 'All good!' : 'Password must include at least 6 characters'}\n      position=\"bottom\"\n      placement=\"start\"\n      withArrow\n      opened={opened}\n      sx={{ display: 'block', width: '100%' }}\n      color={valid ? 'teal' : undefined}\n    >\n      <PasswordInput\n        label=\"Tooltip shown onFocus\"\n        required\n        placeholder=\"Your password\"\n        onFocus={() => setOpened(true)}\n        onBlur={() => setOpened(false)}\n        mt=\"md\"\n        value={value}\n        onChange={(event) => setValue(event.currentTarget.value)}\n      />\n    </Tooltip>\n  );\n}\n\nexport function InputTooltip() {\n  return (\n    <>\n      <TooltipIcon />\n      <TooltipFocus />\n    </>\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/input-tooltip","attributes":{"title":"Inputs with tooltip","category":"inputs","author":"rtivital","dependencies":["/core/tooltip/","/core/text-input/","/core/password-input/","/core/center/","/core/text/","tabler-icons-react"],"canvas":{"center":true,"maxWidth":420}}},{"_component":"InputValidation","code":"import React from 'react';\nimport { TextInput, createStyles } from '@mantine/core';\nimport { XCircleFillIcon } from '@primer/octicons-react';\n\nconst useStyles = createStyles((theme) => ({\n  invalid: {\n    backgroundColor:\n      theme.colorScheme === 'dark' ? theme.fn.rgba(theme.colors.red[8], 0.15) : theme.colors.red[0],\n  },\n\n  icon: {\n    color: theme.colors.red[theme.colorScheme === 'dark' ? 7 : 6],\n  },\n}));\n\nexport function InputValidation() {\n  const { classes } = useStyles();\n  return (\n    <TextInput\n      label=\"Custom validation styles\"\n      error=\"Invalid email\"\n      value=\"hello!gmail.com\"\n      classNames={{ input: classes.invalid }}\n      rightSection={<XCircleFillIcon className={classes.icon} />}\n    />\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/input-validation","attributes":{"title":"Input with custom validation styles","category":"inputs","author":"rtivital","dependencies":["/core/text-input/"],"canvas":{"center":true,"maxWidth":420}}},{"_component":"InputWithButton","code":"import React from 'react';\nimport { TextInput, TextInputProps, ActionIcon, useMantineTheme } from '@mantine/core';\nimport { MagnifyingGlassIcon, ArrowRightIcon } from '@modulz/radix-icons';\n\nexport function InputWithButton(props: TextInputProps) {\n  const theme = useMantineTheme();\n\n  return (\n    <TextInput\n      icon={<MagnifyingGlassIcon style={{ width: 20, height: 20 }} />}\n      radius=\"xl\"\n      size=\"md\"\n      rightSection={\n        <ActionIcon size={32} radius=\"xl\" color={theme.primaryColor} variant=\"filled\">\n          <ArrowRightIcon />\n        </ActionIcon>\n      }\n      placeholder=\"Search questions\"\n      rightSectionWidth={42}\n      {...props}\n    />\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/input-with-button","attributes":{"title":"Input with contained button","category":"inputs","author":"rtivital","withColor":true,"dependencies":["/core/text-input/","/core/button/"],"canvas":{"center":true,"maxWidth":520}}},{"_component":"QuantityInput","code":"import React, { useRef, useState } from 'react';\nimport { createStyles, NumberInput, NumberInputHandlers, ActionIcon } from '@mantine/core';\nimport { Plus, Minus } from 'tabler-icons-react';\n\nconst useStyles = createStyles((theme) => ({\n  wrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: `6px ${theme.spacing.xs}px`,\n    borderRadius: theme.radius.sm,\n    border: `1px solid ${theme.colorScheme === 'dark' ? 'transparent' : theme.colors.gray[3]}`,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.white,\n\n    '&:focus-within': {\n      borderColor: theme.colors[theme.primaryColor][6],\n    },\n  },\n\n  control: {\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n    border: `1px solid ${theme.colorScheme === 'dark' ? 'transparent' : theme.colors.gray[3]}`,\n\n    '&:disabled': {\n      borderColor: theme.colorScheme === 'dark' ? 'transparent' : theme.colors.gray[3],\n      opacity: 0.8,\n      backgroundColor: 'transparent',\n    },\n  },\n\n  input: {\n    textAlign: 'center',\n    paddingRight: `${theme.spacing.sm}px !important`,\n    paddingLeft: `${theme.spacing.sm}px !important`,\n    height: 28,\n    flex: 1,\n  },\n}));\n\ninterface QuantityInputProps {\n  min?: number;\n  max?: number;\n}\n\nexport function QuantityInput({ min = 1, max = 10 }: QuantityInputProps) {\n  const { classes } = useStyles();\n  const handlers = useRef<NumberInputHandlers>();\n  const [value, setValue] = useState(1);\n\n  return (\n    <div className={classes.wrapper}>\n      <ActionIcon<'button'>\n        size={28}\n        variant=\"transparent\"\n        onClick={() => handlers.current.decrement()}\n        disabled={value === min}\n        className={classes.control}\n        onMouseDown={(event) => event.preventDefault()}\n      >\n        <Minus size={16} />\n      </ActionIcon>\n\n      <NumberInput\n        variant=\"unstyled\"\n        min={min}\n        max={max}\n        handlersRef={handlers}\n        value={value}\n        onChange={setValue}\n        classNames={{ input: classes.input }}\n      />\n\n      <ActionIcon<'button'>\n        size={28}\n        variant=\"transparent\"\n        onClick={() => handlers.current.increment()}\n        disabled={value === max}\n        className={classes.control}\n        onMouseDown={(event) => event.preventDefault()}\n      >\n        <Plus size={16} />\n      </ActionIcon>\n    </div>\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/quantity-input","attributes":{"title":"Number input with custom controls","category":"inputs","author":"rtivital","dependencies":[],"canvas":{"center":true,"maxWidth":140}}},{"_component":"TagPicker","code":"import React, { useState } from 'react';\nimport { MultiSelect } from '@mantine/core';\n\nexport function TagPicker() {\n  const [data, setData] = useState(['JavaScript', 'React', 'Angular', 'Vue', 'Svelte']);\n\n  return (\n    <MultiSelect\n      label=\"Select tags or create new one\"\n      placeholder=\"What you article is about?\"\n      data={data}\n      searchable\n      creatable\n      getCreateLabel={(query) => `+ Create ${query}`}\n      onCreate={(query) => setData((current) => [...current, query])}\n      nothingFound=\"Nothing found...\"\n    />\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/tag-picker","attributes":{"title":"Creatable tag picker","category":"inputs","author":"rtivital","dependencies":["/core/multi-select/"],"canvas":{"center":true,"maxWidth":420}}}]}},
    "staticQueryHashes": []}