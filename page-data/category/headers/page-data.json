{
    "componentChunkName": "component---src-components-gallery-gallery-category-page-tsx",
    "path": "/category/headers/",
    "result": {"pageContext":{"category":{"slug":"headers","name":"Headers"},"components":[{"_component":"HeaderMenu","code":"import React from 'react';\nimport { createStyles, Header, Menu, Group, Center, Burger } from '@mantine/core';\nimport { useBooleanToggle } from '@mantine/hooks';\nimport { ChevronDownIcon } from '@modulz/radix-icons';\nimport { MantineLogo } from '../../shared/MantineLogo';\n\nconst useStyles = createStyles((theme) => ({\n  header: {\n    paddingLeft: theme.spacing.md,\n    paddingRight: theme.spacing.md,\n    marginBottom: theme.spacing.xl * 2,\n  },\n\n  inner: {\n    height: 56,\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n\n  links: {\n    [theme.fn.smallerThan('sm')]: {\n      display: 'none',\n    },\n  },\n\n  burger: {\n    [theme.fn.largerThan('sm')]: {\n      display: 'none',\n    },\n  },\n\n  link: {\n    display: 'block',\n    lineHeight: 1,\n    padding: '8px 12px',\n    borderRadius: theme.radius.sm,\n    textDecoration: 'none',\n    color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.colors.gray[7],\n    fontSize: theme.fontSizes.sm,\n    fontWeight: 500,\n\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n    },\n  },\n\n  linkLabel: {\n    marginRight: 5,\n  },\n}));\n\ninterface HeaderSearchProps {\n  links: { link: string; label: string; links: { link: string; label: string }[] }[];\n}\n\nexport function HeaderMenu({ links }: HeaderSearchProps) {\n  const [opened, toggleOpened] = useBooleanToggle(false);\n  const { classes } = useStyles();\n\n  const items = links.map((link) => {\n    const menuItems = link.links?.map((item) => (\n      <Menu.Item key={item.link}>{item.label}</Menu.Item>\n    ));\n\n    if (menuItems) {\n      return (\n        <Menu\n          trigger=\"hover\"\n          delay={0}\n          transitionDuration={0}\n          placement=\"end\"\n          gutter={1}\n          control={\n            <a\n              key={link.label}\n              href={link.link}\n              className={classes.link}\n              onClick={(event) => event.preventDefault()}\n            >\n              <Center>\n                <span className={classes.linkLabel}>{link.label}</span>\n                <ChevronDownIcon width={12} height={12} />\n              </Center>\n            </a>\n          }\n        >\n          {menuItems}\n        </Menu>\n      );\n    }\n\n    return (\n      <a\n        key={link.label}\n        href={link.link}\n        className={classes.link}\n        onClick={(event) => event.preventDefault()}\n      >\n        {link.label}\n      </a>\n    );\n  });\n\n  return (\n    <Header height={56} className={classes.header}>\n      <div className={classes.inner}>\n        <MantineLogo />\n        <Group spacing={5} className={classes.links}>\n          {items}\n        </Group>\n        <Burger\n          opened={opened}\n          onClick={() => toggleOpened()}\n          className={classes.burger}\n          size=\"sm\"\n        />\n      </div>\n    </Header>\n  );\n}\n","category":{"name":"Headers","path":"/category/headers/"},"url":"/component/header-menu","attributes":{"title":"Header with menus","category":"headers","author":"rtivital","responsive":true,"dependencies":["/core/app-shell/","/core/menu/","/core/group/","/core/center/","/core/burger/","/hooks/use-toggle/","@modulz/radix-icons"],"props":{"links":[{"link":"/about","label":"Features"},{"link":"#1","label":"Learn","links":[{"link":"/docs","label":"Documentation"},{"link":"/resources","label":"Resources"},{"link":"/community","label":"Community"},{"link":"/blog","label":"Blog"}]},{"link":"/about","label":"About"},{"link":"/pricing","label":"Pricing"},{"link":"#2","label":"Support","links":[{"link":"/faq","label":"FAQ"},{"link":"/demo","label":"Book a demo"},{"link":"/forums","label":"Forums"}]}]},"canvas":{"center":false}}},{"_component":"HeaderSearch","code":"import React from 'react';\nimport { createStyles, Header, Autocomplete, Group, Burger } from '@mantine/core';\nimport { useBooleanToggle } from '@mantine/hooks';\nimport { MagnifyingGlassIcon } from '@modulz/radix-icons';\nimport { MantineLogo } from '../../shared/MantineLogo';\n\nconst useStyles = createStyles((theme) => ({\n  header: {\n    paddingLeft: theme.spacing.md,\n    paddingRight: theme.spacing.md,\n    marginBottom: theme.spacing.xl * 2,\n  },\n\n  inner: {\n    height: 56,\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n\n  links: {\n    [theme.fn.smallerThan('md')]: {\n      display: 'none',\n    },\n  },\n\n  search: {\n    [theme.fn.smallerThan('xs')]: {\n      display: 'none',\n    },\n  },\n\n  link: {\n    display: 'block',\n    lineHeight: 1,\n    padding: '8px 12px',\n    borderRadius: theme.radius.sm,\n    textDecoration: 'none',\n    color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.colors.gray[7],\n    fontSize: theme.fontSizes.sm,\n    fontWeight: 500,\n\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n    },\n  },\n}));\n\ninterface HeaderSearchProps {\n  links: { link: string; label: string }[];\n}\n\nexport function HeaderSearch({ links }: HeaderSearchProps) {\n  const [opened, toggleOpened] = useBooleanToggle(false);\n  const { classes } = useStyles();\n\n  const items = links.map((link) => (\n    <a\n      key={link.label}\n      href={link.link}\n      className={classes.link}\n      onClick={(event) => event.preventDefault()}\n    >\n      {link.label}\n    </a>\n  ));\n\n  return (\n    <Header height={56} className={classes.header}>\n      <div className={classes.inner}>\n        <Group>\n          <Burger opened={opened} onClick={() => toggleOpened()} size=\"sm\" />\n          <MantineLogo />\n        </Group>\n\n        <Group>\n          <Group ml={50} spacing={5} className={classes.links}>\n            {items}\n          </Group>\n          <Autocomplete\n            className={classes.search}\n            placeholder=\"Search\"\n            icon={<MagnifyingGlassIcon />}\n            data={['React', 'Angular', 'Vue', 'Next.js', 'Riot.js', 'Svelte', 'Blitz.js']}\n          />\n        </Group>\n      </div>\n    </Header>\n  );\n}\n","category":{"name":"Headers","path":"/category/headers/"},"url":"/component/header-search","attributes":{"title":"Header with search","category":"headers","author":"rtivital","responsive":true,"dependencies":["/core/app-shell/","/core/autocomplete/","/core/group/","/core/burger/","/hooks/use-toggle/","@modulz/radix-icons"],"props":{"links":[{"link":"/about","label":"Features"},{"link":"/pricing","label":"Pricing"},{"link":"/learn","label":"Learn"},{"link":"/community","label":"Community"}]},"canvas":{"center":false}}},{"_component":"HeaderSimple","code":"import React, { useState } from 'react';\nimport { createStyles, Header, Container, Group, Burger } from '@mantine/core';\nimport { useBooleanToggle } from '@mantine/hooks';\nimport { MantineLogo } from '../../shared/MantineLogo';\n\nconst useStyles = createStyles((theme) => ({\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: '100%',\n  },\n\n  links: {\n    [theme.fn.smallerThan('xs')]: {\n      display: 'none',\n    },\n  },\n\n  burger: {\n    [theme.fn.largerThan('xs')]: {\n      display: 'none',\n    },\n  },\n\n  link: {\n    display: 'block',\n    lineHeight: 1,\n    padding: '8px 12px',\n    borderRadius: theme.radius.sm,\n    textDecoration: 'none',\n    color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.colors.gray[7],\n    fontSize: theme.fontSizes.sm,\n    fontWeight: 500,\n\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n    },\n  },\n\n  linkActive: {\n    '&, &:hover': {\n      backgroundColor:\n        theme.colorScheme === 'dark'\n          ? theme.fn.rgba(theme.colors[theme.primaryColor][9], 0.25)\n          : theme.colors[theme.primaryColor][0],\n      color: theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 3 : 7],\n    },\n  },\n}));\n\ninterface HeaderSimpleProps {\n  links: { link: string; label: string }[];\n}\n\nexport function HeaderSimple({ links }: HeaderSimpleProps) {\n  const [opened, toggleOpened] = useBooleanToggle(false);\n  const [active, setActive] = useState(links[0].link);\n  const { classes, cx } = useStyles();\n\n  const items = links.map((link) => (\n    <a\n      key={link.label}\n      href={link.link}\n      className={cx(classes.link, { [classes.linkActive]: active === link.link })}\n      onClick={(event) => {\n        event.preventDefault();\n        setActive(link.link);\n      }}\n    >\n      {link.label}\n    </a>\n  ));\n\n  return (\n    <Header height={60} sx={(theme) => ({ marginBottom: theme.spacing.xl * 2 })}>\n      <Container className={classes.header}>\n        <MantineLogo />\n        <Group spacing={5} className={classes.links}>\n          {items}\n        </Group>\n\n        <Burger\n          opened={opened}\n          onClick={() => toggleOpened()}\n          className={classes.burger}\n          size=\"sm\"\n        />\n      </Container>\n    </Header>\n  );\n}\n","category":{"name":"Headers","path":"/category/headers/"},"url":"/component/header-simple","attributes":{"title":"Simple header","category":"headers","author":"rtivital","withColor":true,"responsive":true,"dependencies":["/core/app-shell/","/core/container/","/core/group/","/core/burger/"],"props":{"links":[{"link":"/about","label":"Features"},{"link":"/pricing","label":"Pricing"},{"link":"/learn","label":"Learn"},{"link":"/community","label":"Community"}]},"canvas":{"center":false}}},{"_component":"HeaderTabs","code":"import React, { useState } from 'react';\nimport {\n  createStyles,\n  Container,\n  Avatar,\n  UnstyledButton,\n  Group,\n  Text,\n  Menu,\n  Divider,\n  Tabs,\n  Burger,\n} from '@mantine/core';\nimport { useBooleanToggle } from '@mantine/hooks';\nimport {\n  Logout,\n  Heart,\n  Star,\n  Message,\n  Settings,\n  PlayerPause,\n  Trash,\n  SwitchHorizontal,\n} from 'tabler-icons-react';\nimport { ChevronDownIcon } from '@modulz/radix-icons';\nimport { MantineLogo } from '../../shared/MantineLogo';\n\nconst useStyles = createStyles((theme) => ({\n  header: {\n    paddingTop: theme.spacing.sm,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n    borderBottom: `1px solid ${\n      theme.colorScheme === 'dark' ? 'transparent' : theme.colors.gray[2]\n    }`,\n    marginBottom: theme.spacing.xl * 2,\n  },\n\n  mainSection: {\n    paddingBottom: theme.spacing.sm,\n  },\n\n  userMenu: {\n    [theme.fn.smallerThan('xs')]: {\n      display: 'none',\n    },\n  },\n\n  user: {\n    color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.black,\n    padding: `${theme.spacing.xs}px ${theme.spacing.sm}px`,\n    borderRadius: theme.radius.sm,\n    transition: 'background-color 100ms ease',\n\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.white,\n    },\n  },\n\n  burger: {\n    [theme.fn.largerThan('xs')]: {\n      display: 'none',\n    },\n  },\n\n  userActive: {\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.white,\n  },\n\n  tabs: {\n    [theme.fn.smallerThan('sm')]: {\n      display: 'none',\n    },\n  },\n\n  tabsList: {\n    borderBottom: '0 !important',\n  },\n\n  tabControl: {\n    fontWeight: 500,\n    height: 38,\n\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[1],\n    },\n  },\n\n  tabControlActive: {\n    borderColor: `${\n      theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.colors.gray[2]\n    } !important`,\n  },\n}));\n\ninterface HeaderTabsProps {\n  user: { name: string; image: string };\n  tabs: string[];\n}\n\nexport function HeaderTabs({ user, tabs }: HeaderTabsProps) {\n  const { classes, theme, cx } = useStyles();\n  const [opened, toggleOpened] = useBooleanToggle(false);\n  const [userMenuOpened, setUserMenuOpened] = useState(false);\n\n  const items = tabs.map((tab) => <Tabs.Tab label={tab} key={tab} />);\n\n  return (\n    <div className={classes.header}>\n      <Container className={classes.mainSection}>\n        <Group position=\"apart\">\n          <MantineLogo />\n\n          <Burger\n            opened={opened}\n            onClick={() => toggleOpened()}\n            className={classes.burger}\n            size=\"sm\"\n          />\n\n          <Menu\n            size={260}\n            placement=\"end\"\n            transition=\"pop-top-right\"\n            className={classes.userMenu}\n            onClose={() => setUserMenuOpened(false)}\n            onOpen={() => setUserMenuOpened(true)}\n            control={\n              <UnstyledButton\n                className={cx(classes.user, { [classes.userActive]: userMenuOpened })}\n              >\n                <Group spacing={7}>\n                  <Avatar src={user.image} alt={user.name} radius=\"xl\" size={20} />\n                  <Text weight={500} size=\"sm\" sx={{ lineHeight: 1 }} mr={3}>\n                    {user.name}\n                  </Text>\n                  <ChevronDownIcon width={12} height={12} />\n                </Group>\n              </UnstyledButton>\n            }\n          >\n            <Menu.Item icon={<Heart size={14} color={theme.colors.red[6]} />}>\n              Liked posts\n            </Menu.Item>\n            <Menu.Item icon={<Star size={14} color={theme.colors.yellow[6]} />}>\n              Saved posts\n            </Menu.Item>\n            <Menu.Item icon={<Message size={14} color={theme.colors.blue[6]} />}>\n              Your comments\n            </Menu.Item>\n\n            <Menu.Label>Settings</Menu.Label>\n            <Menu.Item icon={<Settings size={14} />}>Account settings</Menu.Item>\n            <Menu.Item icon={<SwitchHorizontal size={14} />}>Change account</Menu.Item>\n            <Menu.Item icon={<Logout size={14} />}>Logout</Menu.Item>\n\n            <Divider />\n\n            <Menu.Label>Danger zone</Menu.Label>\n            <Menu.Item icon={<PlayerPause size={14} />}>Pause subscription</Menu.Item>\n            <Menu.Item color=\"red\" icon={<Trash size={14} />}>\n              Delete account\n            </Menu.Item>\n          </Menu>\n        </Group>\n      </Container>\n      <Container>\n        <Tabs\n          variant=\"outline\"\n          classNames={{\n            root: classes.tabs,\n            tabsListWrapper: classes.tabsList,\n            tabControl: classes.tabControl,\n            tabActive: classes.tabControlActive,\n          }}\n        >\n          {items}\n        </Tabs>\n      </Container>\n    </div>\n  );\n}\n","category":{"name":"Headers","path":"/category/headers/"},"url":"/component/header-tabs","attributes":{"title":"Header with tabs","category":"headers","author":"rtivital","responsive":true,"dependencies":["/core/container/","/core/avatar/","/core/button/#unstyled-button","/core/group/","/core/text/","/core/menu/","/core/divider/","/core/tabs/","/core/burger/","/hooks/use-toggle/","tabler-icons-react","@modulz/radix-icons"],"props":{"user":{"name":"Jane Spoonfighter","email":"janspoon@fighter.dev","image":"https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80"},"tabs":["Home","Orders","Education","Community","Forums","Support","Account","Helpdesk"]},"canvas":{"center":false}}}]}},
    "staticQueryHashes": []}