{
    "componentChunkName": "component---src-components-gallery-gallery-category-page-tsx",
    "path": "/category/tables/",
    "result": {"pageContext":{"category":{"slug":"tables","name":"Tables"},"components":[{"_component":"TableReviews","code":"import React from 'react';\nimport { createStyles, Table, Progress, Anchor, Text, Group, ScrollArea } from '@mantine/core';\n\nconst useStyles = createStyles((theme) => ({\n  progressBar: {\n    '&:not(:first-of-type)': {\n      borderLeft: `3px solid ${theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white}`,\n    },\n  },\n}));\n\ninterface TableReviewsProps {\n  data: {\n    title: string;\n    author: string;\n    year: number;\n    reviews: { positive: number; negative: number };\n  }[];\n}\n\nexport function TableReviews({ data }: TableReviewsProps) {\n  const { classes, theme } = useStyles();\n\n  const rows = data.map((row) => {\n    const totalReviews = row.reviews.negative + row.reviews.positive;\n    const positiveReviews = (row.reviews.positive / totalReviews) * 100;\n    const negativeReviews = (row.reviews.negative / totalReviews) * 100;\n\n    return (\n      <tr key={row.title}>\n        <td>\n          <Anchor<'a'> size=\"sm\" onClick={(event) => event.preventDefault()}>\n            {row.title}\n          </Anchor>\n        </td>\n        <td>{row.year}</td>\n        <td>\n          <Anchor<'a'> size=\"sm\" onClick={(event) => event.preventDefault()}>\n            {row.author}\n          </Anchor>\n        </td>\n        <td>{Intl.NumberFormat().format(totalReviews)}</td>\n        <td>\n          <Group position=\"apart\">\n            <Text size=\"xs\" color=\"teal\" weight={700}>\n              {positiveReviews.toFixed(0)}%\n            </Text>\n            <Text size=\"xs\" color=\"red\" weight={700}>\n              {negativeReviews.toFixed(0)}%\n            </Text>\n          </Group>\n          <Progress\n            classNames={{ bar: classes.progressBar }}\n            sections={[\n              {\n                value: positiveReviews,\n                color: theme.colorScheme === 'dark' ? theme.colors.teal[9] : theme.colors.teal[6],\n              },\n              {\n                value: negativeReviews,\n                color: theme.colorScheme === 'dark' ? theme.colors.red[9] : theme.colors.red[6],\n              },\n            ]}\n          />\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <ScrollArea>\n      <Table sx={{ minWidth: 800 }} verticalSpacing=\"xs\">\n        <thead>\n          <tr>\n            <th>Book title</th>\n            <th>Year</th>\n            <th>Author</th>\n            <th>Reviews</th>\n            <th>Reviews distribution</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </Table>\n    </ScrollArea>\n  );\n}\n","category":{"name":"Tables","path":"/category/tables/"},"url":"/component/table-reviews","attributes":{"title":"Table with progress","category":"tables","author":"rtivital","dependencies":["/core/table/","/core/progress/","/core/text/","/core/group/","/core/scroll-area/"],"props":{"data":[{"title":"Foundation","author":"Isaac Asimov","year":1951,"reviews":{"positive":2223,"negative":259}},{"title":"Frankenstein","author":"Mary Shelley","year":1818,"reviews":{"positive":5677,"negative":1265}},{"title":"Solaris","author":"Stanislaw Lem","year":1961,"reviews":{"positive":3487,"negative":1845}},{"title":"Dune","author":"Frank Herbert","year":1965,"reviews":{"positive":8576,"negative":663}},{"title":"The Left Hand of Darkness","author":"Ursula K. Le Guin","year":1969,"reviews":{"positive":6631,"negative":993}},{"title":"A Scanner Darkly","author":"Philip K Dick","year":1977,"reviews":{"positive":8124,"negative":1847}}]},"canvas":{"center":true,"maxWidth":920}}},{"_component":"TableScrollArea","code":"import React, { useState } from 'react';\nimport { createStyles, Table, ScrollArea } from '@mantine/core';\n\nconst useStyles = createStyles((theme) => ({\n  header: {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n    transition: 'box-shadow 150ms ease',\n\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      bottom: 0,\n      borderBottom: `1px solid ${\n        theme.colorScheme === 'dark' ? theme.colors.dark[3] : theme.colors.gray[2]\n      }`,\n    },\n  },\n\n  scrolled: {\n    boxShadow: theme.shadows.sm,\n  },\n}));\n\ninterface TableScrollAreaProps {\n  data: { name: string; email: string; company: string }[];\n}\n\nexport function TableScrollArea({ data }: TableScrollAreaProps) {\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n\n  const rows = data.map((row) => (\n    <tr key={row.name}>\n      <td>{row.name}</td>\n      <td>{row.email}</td>\n      <td>{row.company}</td>\n    </tr>\n  ));\n\n  return (\n    <ScrollArea sx={{ height: 300 }} onScrollPositionChange={({ y }) => setScrolled(y !== 0)}>\n      <Table sx={{ minWidth: 700 }}>\n        <thead className={cx(classes.header, { [classes.scrolled]: scrolled })}>\n          <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Company</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </Table>\n    </ScrollArea>\n  );\n}\n","category":{"name":"Tables","path":"/category/tables/"},"url":"/component/table-scroll-area","attributes":{"title":"Table with sticky header","category":"tables","author":"rtivital","dependencies":["/core/table/","/core/scroll-area/"],"props":{"data":[{"name":"Athena Weissnat","company":"Little - Rippin","email":"Elouise.Prohaska@yahoo.com"},{"name":"Deangelo Runolfsson","company":"Greenfelder - Krajcik","email":"Kadin_Trantow87@yahoo.com"},{"name":"Danny Carter","company":"Kohler and Sons","email":"Marina3@hotmail.com"},{"name":"Trace Tremblay PhD","company":"Crona, Aufderhar and Senger","email":"Antonina.Pouros@yahoo.com"},{"name":"Derek Dibbert","company":"Gottlieb LLC","email":"Abagail29@hotmail.com"},{"name":"Viola Bernhard","company":"Funk, Rohan and Kreiger","email":"Jamie23@hotmail.com"},{"name":"Austin Jacobi","company":"Botsford - Corwin","email":"Genesis42@yahoo.com"},{"name":"Hershel Mosciski","company":"Okuneva, Farrell and Kilback","email":"Idella.Stehr28@yahoo.com"},{"name":"Mylene Ebert","company":"Kirlin and Sons","email":"Hildegard17@hotmail.com"},{"name":"Lou Trantow","company":"Parisian - Lemke","email":"Hillard.Barrows1@hotmail.com"},{"name":"Dariana Weimann","company":"Schowalter - Donnelly","email":"Colleen80@gmail.com"},{"name":"Dr. Christy Herman","company":"VonRueden - Labadie","email":"Lilyan98@gmail.com"},{"name":"Katelin Schuster","company":"Jacobson - Smitham","email":"Erich_Brekke76@gmail.com"},{"name":"Melyna Macejkovic","company":"Schuster LLC","email":"Kylee4@yahoo.com"},{"name":"Pinkie Rice","company":"Wolf, Trantow and Zulauf","email":"Fiona.Kutch@hotmail.com"},{"name":"Brain Kreiger","company":"Lueilwitz Group","email":"Rico98@hotmail.com"},{"name":"Myrtice McGlynn","company":"Feest, Beahan and Johnston","email":"Julius_Tremblay29@hotmail.com"},{"name":"Chester Carter PhD","company":"Gaylord - Labadie","email":"Jensen_McKenzie@hotmail.com"},{"name":"Mrs. Ericka Bahringer","company":"Conn and Sons","email":"Lisandro56@hotmail.com"},{"name":"Korbin Buckridge Sr.","company":"Mraz, Rolfson and Predovic","email":"Leatha9@yahoo.com"},{"name":"Dr. Daisy Becker","company":"Carter - Mueller","email":"Keaton_Sanford27@gmail.com"},{"name":"Derrick Buckridge Sr.","company":"O'Reilly LLC","email":"Kay83@yahoo.com"},{"name":"Ernie Hickle","company":"Terry, O'Reilly and Farrell","email":"Americo.Leffler89@gmail.com"},{"name":"Jewell Littel","company":"O'Connell Group","email":"Hester.Hettinger9@hotmail.com"},{"name":"Cyrus Howell","company":"Windler, Yost and Fadel","email":"Rick0@gmail.com"},{"name":"Dr. Orie Jast","company":"Hilll - Pacocha","email":"Anna56@hotmail.com"},{"name":"Luisa Murphy","company":"Turner and Sons","email":"Christine32@yahoo.com"},{"name":"Lea Witting","company":"Hodkiewicz Inc","email":"Ford_Kovacek4@yahoo.com"},{"name":"Kelli Runolfsson","company":"Feest - O'Hara","email":"Dimitri87@yahoo.com"},{"name":"Brook Gaylord","company":"Conn, Huel and Nader","email":"Immanuel77@gmail.com"}]},"canvas":{"center":true,"maxWidth":920}}},{"_component":"TableSelection","code":"import React, { useState } from 'react';\nimport { createStyles, Table, Checkbox, ScrollArea, Group, Avatar, Text } from '@mantine/core';\n\nconst useStyles = createStyles((theme) => ({\n  rowSelected: {\n    backgroundColor:\n      theme.colorScheme === 'dark'\n        ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2)\n        : theme.colors[theme.primaryColor][0],\n  },\n}));\n\ninterface TableSelectionProps {\n  data: { avatar: string; name: string; email: string; job: string; id: string }[];\n}\n\nexport function TableSelection({ data }: TableSelectionProps) {\n  const { classes, cx } = useStyles();\n  const [selection, setSelection] = useState(['1']);\n  const toggleRow = (id: string) =>\n    setSelection((current) =>\n      current.includes(id) ? current.filter((item) => item !== id) : [...current, id]\n    );\n  const toggleAll = () =>\n    setSelection((current) => (current.length === data.length ? [] : data.map((item) => item.id)));\n\n  const rows = data.map((item) => {\n    const selected = selection.includes(item.id);\n    return (\n      <tr key={item.id} className={cx({ [classes.rowSelected]: selected })}>\n        <td>\n          <Checkbox\n            checked={selection.includes(item.id)}\n            onChange={() => toggleRow(item.id)}\n            transitionDuration={0}\n          />\n        </td>\n        <td>\n          <Group spacing=\"sm\">\n            <Avatar size={26} src={item.avatar} radius={26} />\n            <Text size=\"sm\" weight={500}>\n              {item.name}\n            </Text>\n          </Group>\n        </td>\n        <td>{item.email}</td>\n        <td>{item.job}</td>\n      </tr>\n    );\n  });\n\n  return (\n    <ScrollArea>\n      <Table sx={{ minWidth: 800 }} verticalSpacing=\"sm\">\n        <thead>\n          <tr>\n            <th style={{ width: 40 }}>\n              <Checkbox\n                onChange={toggleAll}\n                checked={selection.length === data.length}\n                indeterminate={selection.length > 0 && selection.length !== data.length}\n                transitionDuration={0}\n              />\n            </th>\n            <th>User</th>\n            <th>Email</th>\n            <th>Job</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </Table>\n    </ScrollArea>\n  );\n}\n","category":{"name":"Tables","path":"/category/tables/"},"url":"/component/table-selection","attributes":{"title":"Table with selection","category":"tables","author":"rtivital","withColor":true,"dependencies":["/core/table/","/core/text/","/core/checkbox"],"props":{"data":[{"id":"1","avatar":"https://images.unsplash.com/photo-1624298357597-fd92dfbec01d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80","name":"Robert Wolfkisser","job":"Engineer","email":"rob_wolf@gmail.com"},{"id":"2","avatar":"https://images.unsplash.com/photo-1586297135537-94bc9ba060aa?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80","name":"Jill Jailbreaker","job":"Engineer","email":"jj@breaker.com"},{"id":"3","avatar":"https://images.unsplash.com/photo-1632922267756-9b71242b1592?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80","name":"Henry Silkeater","job":"Designer","email":"henry@silkeater.io"},{"id":"4","avatar":"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80","name":"Bill Horsefighter","job":"Designer","email":"bhorsefighter@gmail.com"},{"id":"5","avatar":"https://images.unsplash.com/photo-1630841539293-bd20634c5d72?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80","name":"Jeremy Footviewer","job":"Manager","email":"jeremy@foot.dev"}]},"canvas":{"center":true,"maxWidth":800}}},{"_component":"TableSort","code":"import React, { useState } from 'react';\nimport {\n  createStyles,\n  Table,\n  ScrollArea,\n  UnstyledButton,\n  Group,\n  Text,\n  Center,\n  TextInput,\n} from '@mantine/core';\nimport {\n  CaretUpIcon,\n  CaretDownIcon,\n  CaretSortIcon,\n  MagnifyingGlassIcon,\n} from '@modulz/radix-icons';\n\nconst useStyles = createStyles((theme) => ({\n  th: {\n    padding: '0 !important',\n  },\n\n  control: {\n    width: '100%',\n    padding: `${theme.spacing.xs}px ${theme.spacing.md}px`,\n\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n    },\n  },\n\n  icon: {\n    width: 21,\n    height: 21,\n    borderRadius: 21,\n  },\n\n  sorted: {\n    backgroundColor:\n      theme.colorScheme === 'dark'\n        ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.35)\n        : theme.colors[theme.primaryColor][0],\n    color: theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 4 : 6],\n  },\n}));\n\ninterface RowData {\n  name: string;\n  email: string;\n  company: string;\n}\n\ninterface TableSortProps {\n  data: RowData[];\n}\n\ninterface ThProps {\n  children: React.ReactNode;\n  reversed: boolean;\n  sorted: boolean;\n  onSort(): void;\n}\n\nfunction Th({ children, reversed, sorted, onSort }: ThProps) {\n  const { classes, cx } = useStyles();\n  const Icon = sorted ? (reversed ? CaretUpIcon : CaretDownIcon) : CaretSortIcon;\n  return (\n    <th className={classes.th}>\n      <UnstyledButton onClick={onSort} className={classes.control}>\n        <Group position=\"apart\">\n          <Text weight={500} size=\"sm\">\n            {children}\n          </Text>\n          <Center className={cx(classes.icon, { [classes.sorted]: sorted })}>\n            <Icon />\n          </Center>\n        </Group>\n      </UnstyledButton>\n    </th>\n  );\n}\n\nfunction filterData(data: RowData[], search: string) {\n  const keys = Object.keys(data[0]);\n  const query = search.toLowerCase().trim();\n  return data.filter((item) => keys.some((key) => item[key].toLowerCase().includes(query)));\n}\n\nfunction sortData(\n  data: RowData[],\n  payload: { sortBy: keyof RowData; reversed: boolean; search: string }\n) {\n  if (!payload.sortBy) {\n    return filterData(data, payload.search);\n  }\n\n  return filterData(\n    [...data].sort((a, b) => {\n      if (payload.reversed) {\n        return b[payload.sortBy].localeCompare(a[payload.sortBy]);\n      }\n\n      return a[payload.sortBy].localeCompare(b[payload.sortBy]);\n    }),\n    payload.search\n  );\n}\n\nexport function TableSort({ data }: TableSortProps) {\n  const [search, setSearch] = useState('');\n  const [sortedData, setSortedData] = useState(data);\n  const [sortBy, setSortBy] = useState<keyof RowData>(null);\n  const [reverseSortDirection, setReverseSortDirection] = useState(false);\n\n  const setSorting = (field: keyof RowData) => {\n    const reversed = field === sortBy ? !reverseSortDirection : false;\n    setReverseSortDirection(reversed);\n    setSortBy(field);\n    setSortedData(sortData(data, { sortBy: field, reversed, search }));\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value;\n    setSearch(value);\n    setSortedData(sortData(data, { sortBy, reversed: reverseSortDirection, search: value }));\n  };\n\n  const rows = sortedData.map((row) => (\n    <tr key={row.name}>\n      <td>{row.name}</td>\n      <td>{row.email}</td>\n      <td>{row.company}</td>\n    </tr>\n  ));\n\n  return (\n    <ScrollArea>\n      <TextInput\n        placeholder=\"Search by any field\"\n        mb=\"md\"\n        icon={<MagnifyingGlassIcon />}\n        value={search}\n        onChange={handleSearchChange}\n      />\n      <Table\n        horizontalSpacing=\"md\"\n        verticalSpacing=\"xs\"\n        sx={{ tableLayout: 'fixed', minWidth: 700 }}\n      >\n        <thead>\n          <tr>\n            <Th\n              sorted={sortBy === 'name'}\n              reversed={reverseSortDirection}\n              onSort={() => setSorting('name')}\n            >\n              Name\n            </Th>\n            <Th\n              sorted={sortBy === 'email'}\n              reversed={reverseSortDirection}\n              onSort={() => setSorting('email')}\n            >\n              Email\n            </Th>\n            <Th\n              sorted={sortBy === 'company'}\n              reversed={reverseSortDirection}\n              onSort={() => setSorting('company')}\n            >\n              Company\n            </Th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows.length > 0 ? (\n            rows\n          ) : (\n            <tr>\n              <td colSpan={Object.keys(data[0]).length}>\n                <Text weight={500} align=\"center\">\n                  Nothing found\n                </Text>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </ScrollArea>\n  );\n}\n","category":{"name":"Tables","path":"/category/tables/"},"url":"/component/table-sort","attributes":{"title":"Table with search and sort","category":"tables","author":"rtivital","dependencies":["/core/table/","/core/scroll-area/","/core/button/#unstyled-button","/core/group/","/core/text/","/core/center/","/core/text-input/","@modulz/radix-icons"],"props":{"data":[{"name":"Athena Weissnat","company":"Little - Rippin","email":"Elouise.Prohaska@yahoo.com"},{"name":"Deangelo Runolfsson","company":"Greenfelder - Krajcik","email":"Kadin_Trantow87@yahoo.com"},{"name":"Danny Carter","company":"Kohler and Sons","email":"Marina3@hotmail.com"},{"name":"Trace Tremblay PhD","company":"Crona, Aufderhar and Senger","email":"Antonina.Pouros@yahoo.com"},{"name":"Derek Dibbert","company":"Gottlieb LLC","email":"Abagail29@hotmail.com"},{"name":"Viola Bernhard","company":"Funk, Rohan and Kreiger","email":"Jamie23@hotmail.com"},{"name":"Austin Jacobi","company":"Botsford - Corwin","email":"Genesis42@yahoo.com"},{"name":"Hershel Mosciski","company":"Okuneva, Farrell and Kilback","email":"Idella.Stehr28@yahoo.com"},{"name":"Mylene Ebert","company":"Kirlin and Sons","email":"Hildegard17@hotmail.com"},{"name":"Lou Trantow","company":"Parisian - Lemke","email":"Hillard.Barrows1@hotmail.com"},{"name":"Dariana Weimann","company":"Schowalter - Donnelly","email":"Colleen80@gmail.com"},{"name":"Dr. Christy Herman","company":"VonRueden - Labadie","email":"Lilyan98@gmail.com"},{"name":"Katelin Schuster","company":"Jacobson - Smitham","email":"Erich_Brekke76@gmail.com"},{"name":"Melyna Macejkovic","company":"Schuster LLC","email":"Kylee4@yahoo.com"},{"name":"Pinkie Rice","company":"Wolf, Trantow and Zulauf","email":"Fiona.Kutch@hotmail.com"},{"name":"Brain Kreiger","company":"Lueilwitz Group","email":"Rico98@hotmail.com"}]},"canvas":{"center":true,"maxWidth":920}}}]}},
    "staticQueryHashes": []}