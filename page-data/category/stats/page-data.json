{
    "componentChunkName": "component---src-components-gallery-gallery-category-page-tsx",
    "path": "/category/stats/",
    "result": {"pageContext":{"category":{"slug":"stats","name":"Stats"},"components":[{"_component":"StatsCard","code":"import React from 'react';\nimport { createStyles, ThemeIcon, Progress, Text, Group, Badge, Paper } from '@mantine/core';\nimport { Swimming } from 'tabler-icons-react';\n\nconst ICON_SIZE = 60;\n\nconst useStyles = createStyles((theme) => ({\n  card: {\n    position: 'relative',\n    overflow: 'visible',\n    paddingTop: theme.spacing.xl * 1.5 + ICON_SIZE / 3,\n  },\n\n  icon: {\n    position: 'absolute',\n    top: -ICON_SIZE / 3,\n    left: `calc(50% - ${ICON_SIZE / 2}px)`,\n  },\n\n  title: {\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n    lineHeight: 1,\n  },\n}));\n\nexport function StatsCard() {\n  const { classes } = useStyles();\n\n  return (\n    <Paper radius=\"md\" withBorder padding=\"xl\" className={classes.card} mt={ICON_SIZE / 3}>\n      <ThemeIcon className={classes.icon} size={ICON_SIZE} radius={ICON_SIZE}>\n        <Swimming size={34} />\n      </ThemeIcon>\n\n      <Text align=\"center\" weight={700} className={classes.title}>\n        Swimming challenge\n      </Text>\n      <Text color=\"dimmed\" align=\"center\" size=\"sm\">\n        32 km / week\n      </Text>\n\n      <Group position=\"apart\" mt=\"xs\">\n        <Text size=\"sm\" color=\"dimmed\">\n          Progress\n        </Text>\n        <Text size=\"sm\" color=\"dimmed\">\n          62%\n        </Text>\n      </Group>\n\n      <Progress value={62} mt={5} />\n\n      <Group position=\"apart\" mt=\"md\">\n        <Text size=\"sm\">20 / 36 km</Text>\n        <Badge size=\"sm\">4 days left</Badge>\n      </Group>\n    </Paper>\n  );\n}\n","category":{"name":"Stats","path":"/category/stats/"},"url":"/component/stats-card","attributes":{"title":"Card with progress","category":"stats","author":"rtivital","withColor":true,"dependencies":["/core/paper/","/core/theme-icon/","/core/text/","/core/group/","/core/progress/","/core/badge/"],"canvas":{"center":true,"maxWidth":320}}},{"_component":"StatsControls","code":"import React, { useState } from 'react';\nimport dayjs from 'dayjs';\nimport { createStyles, UnstyledButton, Text, Paper, Group } from '@mantine/core';\nimport { Swimming, Bike, Run, ChevronDown, ChevronUp } from 'tabler-icons-react';\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    backgroundImage: `linear-gradient(-60deg, ${theme.colors[theme.primaryColor][4]} 0%, ${\n      theme.colors[theme.primaryColor][7]\n    } 100%)`,\n    padding: theme.spacing.xl,\n    borderRadius: theme.radius.md,\n    display: 'flex',\n\n    [theme.fn.smallerThan('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n\n  icon: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    color: theme.colors[theme.primaryColor][6],\n  },\n\n  stat: {\n    minWidth: 98,\n    paddingTop: theme.spacing.xl,\n    minHeight: 140,\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    backgroundColor: theme.white,\n  },\n\n  label: {\n    textTransform: 'uppercase',\n    fontWeight: 700,\n    fontSize: theme.fontSizes.xs,\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n    color: theme.colors.gray[6],\n    lineHeight: 1.2,\n  },\n\n  value: {\n    fontSize: theme.fontSizes.sm,\n    fontWeight: 700,\n    color: theme.black,\n  },\n\n  count: {\n    color: theme.colors.gray[6],\n  },\n\n  day: {\n    fontSize: 44,\n    fontWeight: 700,\n    color: theme.white,\n    lineHeight: 1,\n    textAlign: 'center',\n    marginBottom: 5,\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n  },\n\n  month: {\n    fontSize: theme.fontSizes.sm,\n    color: theme.white,\n    lineHeight: 1,\n    textAlign: 'center',\n  },\n\n  controls: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginRight: theme.spacing.xl * 2,\n\n    [theme.fn.smallerThan('xs')]: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginRight: 0,\n      marginBottom: theme.spacing.xl,\n    },\n  },\n\n  date: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n\n  control: {\n    height: 28,\n    width: '100%',\n    color: theme.colors[theme.primaryColor][2],\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: theme.radius.md,\n    transition: 'background-color 50ms ease',\n\n    [theme.fn.smallerThan('xs')]: {\n      height: 34,\n      width: 34,\n    },\n\n    '&:hover': {\n      backgroundColor: theme.colors[theme.primaryColor][5],\n      color: theme.white,\n    },\n  },\n\n  controlIcon: {\n    [theme.fn.smallerThan('xs')]: {\n      transform: 'rotate(-90deg)',\n    },\n  },\n}));\n\nconst data = [\n  { icon: Run, label: 'Running' },\n  { icon: Swimming, label: 'Swimming' },\n  { icon: Bike, label: 'Bike' },\n];\n\nexport function StatsControls() {\n  const { classes } = useStyles();\n  const [date, setDate] = useState(new Date(2021, 9, 24));\n\n  const stats = data.map((stat) => (\n    <Paper className={classes.stat} radius=\"md\" shadow=\"md\" padding=\"xs\">\n      <stat.icon size={32} className={classes.icon} />\n      <div>\n        <Text className={classes.label}>{stat.label}</Text>\n        <Text size=\"xs\" className={classes.count}>\n          <span className={classes.value}>{Math.floor(Math.random() * 6 + 4)}km</span> / 10km\n        </Text>\n      </div>\n    </Paper>\n  ));\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.controls}>\n        <UnstyledButton\n          className={classes.control}\n          onClick={() => setDate((current) => dayjs(current).add(1, 'day').toDate())}\n        >\n          <ChevronUp className={classes.controlIcon} />\n        </UnstyledButton>\n\n        <div className={classes.date}>\n          <Text className={classes.day}>{dayjs(date).format('DD')}</Text>\n          <Text className={classes.month}>{dayjs(date).format('MMMM')}</Text>\n        </div>\n\n        <UnstyledButton\n          className={classes.control}\n          onClick={() => setDate((current) => dayjs(current).subtract(1, 'day').toDate())}\n        >\n          <ChevronDown className={classes.controlIcon} />\n        </UnstyledButton>\n      </div>\n      <Group sx={{ flex: 1 }}>{stats}</Group>\n    </div>\n  );\n}\n","category":{"name":"Stats","path":"/category/stats/"},"url":"/component/stats-controls","attributes":{"title":"Stats with controls","category":"stats","author":"rtivital","withColor":true,"responsive":true,"dependencies":["/core/button/#unstyled-button","/core/text/","/core/paper/","/core/group/","tabler-icons-react"],"canvas":{"center":true,"maxWidth":500}}},{"_component":"StatsGrid","code":"import React from 'react';\nimport { createStyles, Group, Paper, SimpleGrid, Text } from '@mantine/core';\nimport {\n  UserPlus,\n  Discount2,\n  Receipt2,\n  Coin,\n  ArrowUpRight,\n  ArrowDownRight,\n} from 'tabler-icons-react';\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    padding: theme.spacing.xl * 1.5,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n  },\n\n  value: {\n    fontSize: 24,\n    fontWeight: 700,\n    lineHeight: 1,\n  },\n\n  diff: {\n    lineHeight: 1,\n    display: 'flex',\n    alignItems: 'center',\n  },\n\n  icon: {\n    color: theme.colorScheme === 'dark' ? theme.colors.dark[3] : theme.colors.gray[4],\n  },\n\n  title: {\n    fontWeight: 700,\n    textTransform: 'uppercase',\n  },\n}));\n\nconst icons = {\n  user: UserPlus,\n  discount: Discount2,\n  receipt: Receipt2,\n  coin: Coin,\n};\n\ninterface StatsGridProps {\n  data: { title: string; icon: keyof typeof icons; value: string; diff: number }[];\n}\n\nexport function StatsGrid({ data }: StatsGridProps) {\n  const { classes } = useStyles();\n  const stats = data.map((stat) => {\n    const Icon = icons[stat.icon];\n    const DiffIcon = stat.diff > 0 ? ArrowUpRight : ArrowDownRight;\n\n    return (\n      <Paper withBorder padding=\"md\" radius=\"md\">\n        <Group position=\"apart\">\n          <Text size=\"xs\" color=\"dimmed\" className={classes.title}>\n            {stat.title}\n          </Text>\n          <Icon className={classes.icon} size={22} />\n        </Group>\n\n        <Group align=\"flex-end\" spacing=\"xs\" mt={25}>\n          <Text className={classes.value}>{stat.value}</Text>\n          <Text\n            color={stat.diff > 0 ? 'teal' : 'red'}\n            size=\"sm\"\n            weight={500}\n            className={classes.diff}\n          >\n            <span>{stat.diff}%</span>\n            <DiffIcon size={16} />\n          </Text>\n        </Group>\n\n        <Text size=\"xs\" color=\"dimmed\" mt={7}>\n          Compared to previous month\n        </Text>\n      </Paper>\n    );\n  });\n  return (\n    <div className={classes.root}>\n      <SimpleGrid\n        cols={4}\n        breakpoints={[\n          { maxWidth: 'md', cols: 2 },\n          { maxWidth: 'xs', cols: 1 },\n        ]}\n      >\n        {stats}\n      </SimpleGrid>\n    </div>\n  );\n}\n","category":{"name":"Stats","path":"/category/stats/"},"url":"/component/stats-grid","attributes":{"title":"Stats grid","category":"stats","author":"rtivital","responsive":true,"dependencies":["/core/group/","/core/paper/","/core/simple-grid/","/core/text/","tabler-icons-react"],"props":{"data":[{"title":"Revenue","icon":"receipt","value":"13,456","diff":34},{"title":"Profit","icon":"coin","value":"4,145","diff":-13},{"title":"Coupons usage","icon":"discount","value":"745","diff":18},{"title":"New customers","icon":"user","value":"188","diff":-30}]},"canvas":{"center":false}}},{"_component":"StatsGridIcons","code":"import React from 'react';\nimport { createStyles, Group, Paper, Text, ThemeIcon, SimpleGrid } from '@mantine/core';\nimport { ArrowUpRight, ArrowDownRight } from 'tabler-icons-react';\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    padding: theme.spacing.xl * 1.5,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n  },\n\n  label: {\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n  },\n}));\n\ninterface StatsGridIconsProps {\n  data: { title: string; value: string; diff: number }[];\n}\n\nexport function StatsGridIcons({ data }: StatsGridIconsProps) {\n  const { classes } = useStyles();\n  const stats = data.map((stat) => {\n    const DiffIcon = stat.diff > 0 ? ArrowUpRight : ArrowDownRight;\n\n    return (\n      <Paper withBorder padding=\"md\" radius=\"md\" key={stat.title}>\n        <Group position=\"apart\">\n          <div>\n            <Text\n              color=\"dimmed\"\n              transform=\"uppercase\"\n              weight={700}\n              size=\"xs\"\n              className={classes.label}\n            >\n              {stat.title}\n            </Text>\n            <Text weight={700} size=\"xl\">\n              {stat.value}\n            </Text>\n          </div>\n          <ThemeIcon\n            color=\"gray\"\n            variant=\"light\"\n            sx={(theme) => ({ color: stat.diff > 0 ? theme.colors.teal[6] : theme.colors.red[6] })}\n            size={38}\n            radius=\"md\"\n          >\n            <DiffIcon size={28} />\n          </ThemeIcon>\n        </Group>\n        <Text color=\"dimmed\" size=\"sm\" mt=\"md\">\n          <Text component=\"span\" color={stat.diff > 0 ? 'teal' : 'red'} weight={700}>\n            {stat.diff}%\n          </Text>{' '}\n          {stat.diff > 0 ? 'increase' : 'decrease'} compared to last month\n        </Text>\n      </Paper>\n    );\n  });\n\n  return (\n    <div className={classes.root}>\n      <SimpleGrid cols={3} breakpoints={[{ maxWidth: 'sm', cols: 1 }]}>\n        {stats}\n      </SimpleGrid>\n    </div>\n  );\n}\n","category":{"name":"Stats","path":"/category/stats/"},"url":"/component/stats-grid-icons","attributes":{"title":"Stats grid with diff icons","category":"stats","author":"rtivital","responsive":true,"dependencies":["/core/group/","/core/paper/","/core/text/","/core/theme-icon/","/core/simple-grid/","tabler-icons-react"],"props":{"data":[{"title":"Revenue","value":"$13,456","diff":34},{"title":"Profit","value":"$4,145","diff":-13},{"title":"Coupons usage","value":"745","diff":18}]},"canvas":{"center":false}}},{"_component":"StatsGroup","code":"import React from 'react';\nimport { createStyles, Text } from '@mantine/core';\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    display: 'flex',\n    backgroundImage: `linear-gradient(-60deg, ${theme.colors[theme.primaryColor][4]} 0%, ${\n      theme.colors[theme.primaryColor][7]\n    } 100%)`,\n    padding: theme.spacing.xl * 1.5,\n    borderRadius: theme.radius.md,\n\n    [theme.fn.smallerThan('sm')]: {\n      flexDirection: 'column',\n    },\n  },\n\n  title: {\n    color: theme.white,\n    textTransform: 'uppercase',\n    fontWeight: 700,\n    fontSize: theme.fontSizes.sm,\n  },\n\n  count: {\n    color: theme.white,\n    fontSize: 32,\n    lineHeight: 1,\n    fontWeight: 700,\n    marginBottom: theme.spacing.md,\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n  },\n\n  description: {\n    color: theme.colors[theme.primaryColor][0],\n    fontSize: theme.fontSizes.sm,\n    marginTop: 5,\n  },\n\n  stat: {\n    flex: 1,\n\n    '& + &': {\n      paddingLeft: theme.spacing.xl,\n      marginLeft: theme.spacing.xl,\n      borderLeft: `1px solid ${theme.colors[theme.primaryColor][3]}`,\n\n      [theme.fn.smallerThan('sm')]: {\n        paddingLeft: 0,\n        marginLeft: 0,\n        borderLeft: 0,\n        paddingTop: theme.spacing.xl,\n        marginTop: theme.spacing.xl,\n        borderTop: `1px solid ${theme.colors[theme.primaryColor][3]}`,\n      },\n    },\n  },\n}));\n\ninterface StatsGroupProps {\n  data: { title: string; stats: string; description: string }[];\n}\n\nexport function StatsGroup({ data }: StatsGroupProps) {\n  const { classes } = useStyles();\n  const stats = data.map((stat) => (\n    <div key={stat.title} className={classes.stat}>\n      <Text className={classes.count}>{stat.stats}</Text>\n      <Text className={classes.title}>{stat.title}</Text>\n      <Text className={classes.description}>{stat.description}</Text>\n    </div>\n  ));\n  return <div className={classes.root}>{stats}</div>;\n}\n","category":{"name":"Stats","path":"/category/stats/"},"url":"/component/stats-group","attributes":{"title":"Grouped stats","category":"stats","author":"rtivital","withColor":true,"responsive":true,"dependencies":["/core/text/"],"props":{"data":[{"title":"Page views","stats":"456,133","description":"24% more than in the same month last year, 33% more that two years ago"},{"title":"New users","stats":"2,175","description":"13% less compared to last month, new user engagement up by 6%"},{"title":"Completed orders","stats":"1,994","description":"1994 orders were completed this month, 97% satisfaction rate"}]},"canvas":{"center":true,"maxWidth":920}}},{"_component":"StatsRing","code":"import React from 'react';\nimport { RingProgress, Text, SimpleGrid, Paper, Center, Group } from '@mantine/core';\nimport { ArrowBottomLeftIcon, ArrowTopRightIcon } from '@modulz/radix-icons';\n\ninterface StatsRingProps {\n  data: {\n    label: string;\n    stats: string;\n    progress: number;\n    color: string;\n    icon: 'up' | 'down';\n  }[];\n}\n\nconst icons = {\n  up: ArrowTopRightIcon,\n  down: ArrowBottomLeftIcon,\n};\n\nexport function StatsRing({ data }: StatsRingProps) {\n  const stats = data.map((stat) => {\n    const Icon = icons[stat.icon];\n    return (\n      <Paper withBorder radius=\"md\" padding=\"xs\" key={stat.label}>\n        <Group>\n          <RingProgress\n            size={80}\n            roundCaps\n            sections={[{ value: stat.progress, color: stat.color }]}\n            label={\n              <Center>\n                <Icon width={22} height={22} />\n              </Center>\n            }\n          />\n\n          <div>\n            <Text color=\"dimmed\" size=\"xs\" transform=\"uppercase\" weight={700}>\n              {stat.label}\n            </Text>\n            <Text weight={700} size=\"xl\">\n              {stat.stats}\n            </Text>\n          </div>\n        </Group>\n      </Paper>\n    );\n  });\n  return (\n    <SimpleGrid cols={3} breakpoints={[{ maxWidth: 'sm', cols: 1 }]}>\n      {stats}\n    </SimpleGrid>\n  );\n}\n","category":{"name":"Stats","path":"/category/stats/"},"url":"/component/stats-ring","attributes":{"title":"Stats with ring progress","category":"stats","author":"rtivital","responsive":true,"dependencies":["/core/paper/","/core/ring-progress/","/core/center/","/core/text/","/core/group","/core/paper/","/core/simple-grid/","@modulz/radix-icons"],"props":{"data":[{"label":"Page views","stats":"456,578","progress":65,"color":"teal","icon":"up"},{"label":"New users","stats":"2,550","progress":72,"color":"blue","icon":"up"},{"label":"Orders","stats":"4,735","progress":52,"color":"red","icon":"down"}]},"canvas":{"center":true,"maxWidth":840}}},{"_component":"StatsSegments","code":"import React from 'react';\nimport { createStyles, Progress, Box, Text, Group, Paper, SimpleGrid } from '@mantine/core';\nimport { ArrowUpRight, DeviceAnalytics } from 'tabler-icons-react';\n\nconst useStyles = createStyles((theme) => ({\n  progressLabel: {\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n    lineHeight: 1,\n    fontSize: theme.fontSizes.sm,\n  },\n\n  stat: {\n    borderBottom: '3px solid',\n    paddingBottom: 5,\n  },\n\n  statCount: {\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n    lineHeight: 1.3,\n  },\n\n  diff: {\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n    display: 'flex',\n    alignItems: 'center',\n  },\n\n  icon: {\n    color: theme.colorScheme === 'dark' ? theme.colors.dark[3] : theme.colors.gray[4],\n  },\n}));\n\ninterface StatsSegmentsProps {\n  total: string;\n  diff: number;\n  data: {\n    label: string;\n    count: string;\n    part: number;\n    color: string;\n  }[];\n}\n\nexport function StatsSegments({ total, diff, data }: StatsSegmentsProps) {\n  const { classes } = useStyles();\n\n  const segments = data.map((segment) => ({\n    value: segment.part,\n    color: segment.color,\n    label: segment.part > 10 ? `${segment.part}%` : null,\n  }));\n\n  const descriptions = data.map((stat) => (\n    <Box key={stat.label} sx={{ borderBottomColor: stat.color }} className={classes.stat}>\n      <Text transform=\"uppercase\" size=\"xs\" color=\"dimmed\" weight={700}>\n        {stat.label}\n      </Text>\n\n      <Group position=\"apart\" align=\"flex-end\" spacing={0}>\n        <Text weight={700}>{stat.count}</Text>\n        <Text color={stat.color} weight={700} size=\"sm\" className={classes.statCount}>\n          {stat.part}%\n        </Text>\n      </Group>\n    </Box>\n  ));\n\n  return (\n    <Paper withBorder padding=\"md\" radius=\"md\">\n      <Group position=\"apart\">\n        <Group align=\"flex-end\" spacing=\"xs\">\n          <Text size=\"xl\" weight={700}>\n            {total}\n          </Text>\n          <Text color=\"teal\" className={classes.diff} size=\"sm\" weight={700}>\n            <span>{diff}%</span>\n            <ArrowUpRight size={16} style={{ marginBottom: 4 }} />\n          </Text>\n        </Group>\n        <DeviceAnalytics size={20} className={classes.icon} />\n      </Group>\n\n      <Text color=\"dimmed\" size=\"sm\">\n        Page views compared to previous month\n      </Text>\n\n      <Progress\n        sections={segments}\n        size={34}\n        classNames={{ label: classes.progressLabel }}\n        mt={40}\n      />\n      <SimpleGrid cols={3} breakpoints={[{ maxWidth: 'xs', cols: 1 }]} mt=\"xl\">\n        {descriptions}\n      </SimpleGrid>\n    </Paper>\n  );\n}\n","category":{"name":"Stats","path":"/category/stats/"},"url":"/component/stats-segments","attributes":{"title":"Stats with segments","category":"stats","author":"rtivital","responsive":true,"dependencies":["/core/progress/","/core/box/","/core/text/","/core/group/","/core/paper/","/core/simple-grid/","tabler-icons-react"],"props":{"total":"345,765","diff":18,"data":[{"label":"Mobile","count":"204,001","part":59,"color":"#47d6ab"},{"label":"Desktop","count":"121,017","part":35,"color":"#03141a"},{"label":"Tablet","count":"31,118","part":6,"color":"#4fcdf7"}]},"canvas":{"center":true,"maxWidth":440}}}]}},
    "staticQueryHashes": []}